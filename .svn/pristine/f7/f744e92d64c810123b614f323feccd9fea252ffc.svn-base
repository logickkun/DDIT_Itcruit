<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<div class="page-content-wrapper border">
	<!-- Title -->
	<div class="row mb-5">
		<div class="col-12 d-sm-flex justify-content-between align-items-center">
			<h1 class="h3 mb-2 mb-sm-0">${recruitTtl}</h1>
		</div>
	</div>


	<ul class="nav nav-tabs nav-justified mb-3">
		<c:forEach items="${apList}" var="ap" varStatus="index">
			<li class="nav-item"><a class="nav-link <c:if test="${index.index + 1 == 1 }">active</c:if>" data-bs-toggle="tab" href="#tab-2-${index.index + 1}">${ap.clsNm }</a></li>
		</c:forEach>
	</ul>

	<div class="tab-content">

		<c:set var="numberIndex" value="${apList}" />
		<input type="hidden" value="${fn:length(numberIndex)}" id="index" />
		<c:forEach items="${apList}" var="ap" varStatus="apIndex">
			<div class="tab-pane <c:if test="${apIndex.index == 0}">show active</c:if>" id="tab-2-${apIndex.index + 1}">
				<div class="row">

					<div class="col-4 col-sm-3">

						<div class="nav flex-column nav-pills addQuestion" id="v-pills-tab-${apIndex.index}" role="tablist" aria-orientation="vertical">
							<c:forEach items="${eiqdList}" var="eiqd" varStatus="eiqdIndex">
								<a class="nav-link <c:if test="${eiqdIndex.index == 0}">active</c:if>" id="v-pills-${apIndex.index}-${eiqdIndex.index}-tab" data-bs-toggle="pill" href="#v-${apIndex.index}-${eiqdIndex.index}" role="tab" aria-controls="v-${apIndex.index}-${eiqdIndex.index}" aria-selected="true"> ${eiqdIndex.index + 1} 문항 </a>
							</c:forEach>

						</div>

						<button class="btn btn-primary w-40" type="button" onclick="addQuestion(this)" id="addBtn-${apIndex.index}">문항 추가</button>

					</div>

					<div class="col-8 col-sm-9 ">
						<div class="tab-content pt-0" id="v-pills-tabContent-${apIndex.index}">
							<c:forEach items="${eiqdList}" var="eiqd" varStatus="eiqdIndex">
								<div class="tab-pane fade <c:if test="${eiqdIndex.index == 0}">show active</c:if> border-1" id="v-${apIndex.index}-${eiqdIndex.index}" role="tabpanel" aria-labelledby="v-pills-${apIndex.index}-${eiqdIndex.index}-tab">
									<h4>자기소개서 질문 ${eiqdIndex.index + 1}</h4>
									<hr>
									<div class="entIntroQstnCn rounded-2" style="border: 1px solid; width: 116vh; height: 25vh; padding: 20px; margin: 20px;">
									    <span id="questionText-${apIndex.index}-${eiqdIndex.index}">${eiqd.entIntroQstnCn}</span>
									    <input type="text" id="editInput-${apIndex.index}-${eiqdIndex.index}" value="${eiqd.entIntroQstnCn}" style="display:none; width: 100%; border: none;">
									</div>
	
									<div class="d-flex justify-content-end" style="padding-right: 15px">
										<button class="btn btn-primary w-40" type="button" onclick="editQuestion(this, ${apIndex.index}, ${eiqdIndex.index})" id="editBtn-${apIndex.index}-${eiqdIndex.index}">내용 수정</button>
									</div>

								</div>
							</c:forEach>

						</div>
					</div>

				</div>
			</div>

			<script>
			
				var entIntroQstnNo = "${entIntroQstnNo}";
				var xhr = new XMLHttpRequest()
			
			    function addQuestion(button) {
			        var tabPane = button.closest(".tab-pane");
			        var tabContent = tabPane.querySelector(".tab-content");
			
			        // 모든 기존 탭에서 'active'와 'show' 클래스 제거
			        var allTabs = tabContent.querySelectorAll(".tab-pane");
			        allTabs.forEach(function(tab) {
			            tab.classList.remove("show");
			            tab.classList.remove("active");
			        });
			
			        // 새로운 문항의 인덱스 계산
			        var newQuestionIndex = tabContent.querySelectorAll(".tab-pane").length + 1;
			
			        // 새로운 문항 HTML 생성
			        var newQuestionHTML = '<div class="tab-pane fade active show" id="v-' + newQuestionIndex + '" role="tabpanel">' +
			            '<div class="row">' +
			            '<div class="col-12">' +
			            '<h4>자기소개서 질문 ' + (newQuestionIndex) + '</h4>' +
			            '<hr>' +
			            '<span class="questionText rounded-2" style="display: none; border: 1px solid; width: 116vh; height: 25vh; padding: 20px; margin: 20px;"></span>' +
			            '<input type="text" class="form-control newInput" placeholder="문항 내용을 입력하세요. (2000자 이내로 적어주세요)" style="width: 100vh;">' +
			            '<div class="d-flex justify-content-end" style="padding-right: 15px">' +
			            '<button class="btn btn-primary w-40" type="button" onclick="editQuestionInsert(this)" id="editBtn-' + newQuestionIndex + '">내용 등록</button>' +
			            '</div>' +
			            '</div>' +
			            '</div>' +
			            '</div>';
			
			        // 새로운 문항을 tab-content에 추가
			        tabContent.insertAdjacentHTML('beforeend', newQuestionHTML);
			
			        // index 업데이트
			        document.getElementById("index").value = index; // 돔에 값 업데이트
			
			        // 새로운 nav-link 추가
			        var navPills = tabPane.querySelector(".nav.flex-column.nav-pills");
			        var newNavLink = '<a class="nav-link" id="v-pills-' + newQuestionIndex + '-tab" data-bs-toggle="pill" href="#v-' + newQuestionIndex + '" role="tab" aria-controls="v-' + newQuestionIndex + '" aria-selected="true">' +
			        newQuestionIndex + ' 문항' +
			            '</a>';
			
			        navPills.insertAdjacentHTML('beforeend', newNavLink);
			
			        // 모든 nav-link에서 'active' 클래스 제거하고 새로운 링크에만 'active' 추가
			        var allNavLinks = navPills.querySelectorAll(".nav-link");
			        allNavLinks.forEach(link => link.classList.remove("active"));
			        allNavLinks[allNavLinks.length - 1].classList.add("active");
			    }
			
			    function editQuestion(button, apIndex, eiqdIndex) {
			    	
			    	var questionText = document.getElementById('questionText-' + apIndex + '-' + eiqdIndex);
			    	var editInput = document.getElementById('editInput-' + apIndex + '-' + eiqdIndex);
			    	var button = document.getElementById('editBtn-' + apIndex + '-' + eiqdIndex);
					
			        console.log(button);
			        
			        if (button.textContent === "내용 수정") {
			            // 텍스트 보기를 숨기고 입력 필드를 보여줌
			            questionText.style.display = 'none';
			            editInput.style.display = 'block';
			            button.textContent = '문항 등록'; // 버튼 텍스트 변경
			            
			            
			        } else {
			        	
			        	console.log(editInput.value);
			        	console.log(questionText.textContent);
			        	
			        	
			        	xhr.open("get", "/myPage/enterprise/qstnDSNCTUpdate?entIntroQstnNo="+encodeURIComponent(entIntroQstnNo)+"&entIntroQstnCn="+encodeURIComponent(questionText.textContent)+"&entIntroQstnUpdateCn="+encodeURIComponent(editInput.value))
			        	
			        	xhr.onreadystatechange = function() {
			        		
			        		if(xhr.readyState === XMLHttpRequest.DONE){
			        			
			        			if(xhr.status === 200){
			        				
			        				var res = xhr.responseText;
			        				
			        				console.log(res);
			        				
			        			}else{
			        				
			        				console.log("요청 실패");
			        				
			        			}
			        			
			        		}
			        		
			        	}
			        	
			        	xhr.send();
 			        	
			        	
			            // 입력 필드 값을 텍스트로 업데이트하고 숨김
			            questionText.textContent = editInput.value;
			            questionText.style.display = 'block';
			            editInput.style.display = 'none';
			            button.textContent = '내용 수정'; // 버튼 텍스트를 원래대로 변경
			        }
			    }
			    
			    
			    function editQuestionInsert(button) {
			        var tabPane = button.closest(".tab-pane");
			        var inputField = tabPane.querySelector(".newInput");
			        var questionTextSpan = tabPane.querySelector(".questionText");

			        if (button.textContent === "내용 등록" || button.textContent === "등록") {
			            if (inputField.value.trim() === "") {
			                alert("문항 내용을 입력하세요.");
			                return;
			            }
			            // 입력 필드에서 가져온 값을 텍스트로 설정
			            questionTextSpan.textContent = inputField.value;
			            questionTextSpan.style.display = 'block';
			            inputField.style.display = 'none';
			            button.textContent = "내용 수정";
			            
			            
			            var inputValue = inputField.value;
			            
			            xhr.open("get", "/myPage/enterprise/qstnDSNCTInsert?entIntroQstnNo="+encodeURIComponent(entIntroQstnNo)+"&entIntroQstnCn="+encodeURIComponent(inputValue), true);
			            
			            xhr.onreadystatechange = function() {
			            	
			            	if(xhr.readyState === XMLHttpRequest.DONE){
			            		
			            		if(xhr.status === 200){
			            			
			            			var res = xhr.responseText;
			            			
			            			console.log("요청 성공");
			            			console.log(res);
			            			
			            		}else{
									
			            			console.log("요청 실패");
									 
								}
			            		
			            	}else{
			            		
			            		console.log("요청 실패");
			            		
			            	}
			            	
			            	
			            }
			            
			            xhr.send();
			            
			            
			            
			        } else {
			            // 텍스트를 입력 필드로 다시 전환
			            inputField.value = questionTextSpan.textContent;  // 텍스트 내용을 입력 필드에 설정
			            inputField.style.display = 'block';
			            questionTextSpan.style.display = 'none';
			            button.textContent = "등록";
			        }
			    }

			    
			</script>


		</c:forEach>


	</div>

</div>