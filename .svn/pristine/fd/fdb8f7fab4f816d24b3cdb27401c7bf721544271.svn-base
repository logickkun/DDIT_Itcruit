<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.co.itcruit.mapper.IRecruitMapper">
 
 
 
	<!-- 채용 달력출력용 -->
 	<resultMap type="calendarVO" id="recruitListMap">
<!--  		<id property="recruitNo" column="recruit_no"/> -->
<!--  		<id property="pstnCmmncdNm" column="PSTN_CMMNCD_NM"/> -->
 		<result property="title" column="ent_nm"/>
		<result property="start" column="recruit_strt_dt" />
		<result property="start" column="recruit_end_dt" />
		<collection property="extendedProps" resultMap="extendMap"/>
 	</resultMap>
 	
 	<resultMap type="extendVO" id="extendMap">
 		<result property="recruitNo" column="recruit_no"/>
<!--  		<collection property="esntlLangCmmncdNms" column="esntl_Lang_Cmmncd_Nm" /> -->
<!--  		<collection property="preferLangCmmncdNms" column="prefer_Lang_Cmmncd_Nm" /> -->
 	</resultMap>
 
 	<sql id="calSearch">
		<if test="entNm != null and entNm != '' ">
			and (ent_nm like '%' || #{entNm} || '%')
		</if>
		<if test="pstnCmmncdNm != null and pstnCmmncdNm !='' ">
			and (pstn_Cmmncd_Nm '%' || #{pstnCmmncdNm} || '%')
		</if>
		<if test="lang != null and lang !='' ">
			and (prefer_lang_no like '%' || #{lang} || '%')
		</if>
		<if test="lang != null and lang !='' ">
			or (esntl_lang_no like '%' || #{lang} || '%')
		</if>
		<if test="cmmncdGrpCd != null and cmmncdGrpCd !='' ">
			and (cmmncd_Grp_Cd '%' || #{cmmncdGrpCd} || '%')
		</if>
		<if test="cmmncdNm1 != null and cmmncdNm1 !='' ">
			and (cmmncd_Nm1 '%' || #{cmmncdNm1} || '%')
		</if>
	</sql>
	
	
 
 	<select id="recruitDetail" parameterType="string" resultType="recruitVO">
 		select 
 			r.recruit_no, r.ent_no, r.recruit_ttl, 
 			r.recruit_strt_dt, r.recruit_end_dt, r.recruit_yn,
 			r.recruit_career_code_nm, r.recruit_career_dt, r.ent_url,
 			r.recruit_hit, r.process_yn, r.process_amt,
 			r.recruit_pay, r.recruit_enroll_ymd, r.cmmncd_grp_cd,
 			r.cmmncd_nm1, r.recruit_cnt, r.pstn_cmmncd_nm,
 			e.ent_nm
 		from recruit r left join enterprise e on r.ent_no = e.ent_no
 		where r.recruit_no = #{recruitNo} and r.pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</select>
 	
 	<select id="applyCheck" parameterType="recruitVO" resultType="recruitVO">
 		select 
 			process_yn, ent_url
 		from recruit
 		where recruit_no = #{recruitNo} and pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</select>
 	
 	<!-- 리절트맵을 만들어야함 RecruitVO + EnpriseVO = resultMap -->
 	<select id="selectInitRecruitList" parameterType="pagingVO" resultType="recruitVO">
 		SELECT * FROM (
            SELECT
                a.*,
                ROW_NUMBER() OVER (ORDER BY a.recruit_no DESC) AS rnum
            FROM (
                SELECT
                    r.recruit_no, r.ent_no, r.recruit_ttl, r.recruit_strt_dt, r.recruit_end_dt,
                    r.recruit_yn, r.recruit_career_code_nm, r.recruit_career_dt, r.ent_url,
                    r.recruit_hit, r.process_yn, r.process_amt, r.recruit_pay, r.recruit_enroll_ymd,
                    r.cmmncd_grp_cd, r.cmmncd_nm1, r.recruit_cnt, r.pstn_cmmncd_nm, e.ent_nm
                FROM
                    recruit r
                LEFT JOIN
                enterprise e ON r.ent_no = e.ent_no  
                ORDER BY recruit_enroll_ymd DESC
            ) a
        ) b
        WHERE
         <![CDATA[
            b.rnum >= #{startRow} AND b.rnum <= #{endRow}
         ]]>
 	</select>
 	
 	<select id="hireCmmnd" parameterType="string" resultType="string">
 		select HIRE_CMMND_NM
			from hire_stts
		where recruit_no = #{recruitNo}
 	</select>
 	
 	<select id="selectLikeEnt" parameterType="enterpriseVO" resultType="enterpriseVO">
 		SELECT
		    ent_no,
		    account_id
		FROM
		    ent_like
		where ent_no = #{entNo}
		and account_id = #{loginId}
 	</select>
 	
 	
 	<insert id="loveRecruit" parameterType="recruitVO">
 		INSERT INTO interestnotices (
		    recruit_no,
		    account_id,
		    pstn_cmmncd_nm
		) VALUES (
		   #{recruitNo},
		   #{accountId},
		   #{pstnCmmncdNm}
		)
 	</insert>
 	
 	<delete id="hateRecruit" parameterType="recruitVO">
 		DELETE FROM interestnotices
		WHERE
        	recruit_no = #{recruitNo}
		    and account_id = #{accountId}
		    and pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</delete>
 	
 	<insert id="insertApplicant" parameterType="recruitApplicantVO">
 		insert into RECRUIT_APPLICANT (
 			apply_no, apply_dt, recruit_no, account_id
 		) values (
 			#{applyNo}, sysdate, #{recruitNo}, #{accountId}
 		)
 	</insert>
 	
 	<update id="incrementEntApply" parameterType="recruitVO">
 		update recruit
 		set
 			ent_apply = ent_apply + 1
 		where
 			recruit_no = #{recruitNo} 
 			and pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</update>
 	
 	<update id="incrementRecruitHit" parameterType="string">
 		update recruit
 		set
 			recruit_hit = recruit_hit + 1
 		where
 			recruit_no = #{recruitNo} 
 			and pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</update>
 	
 	<select id="applicantCheck" parameterType="recruitVO" resultType="recruitApplicantVO">
 		select
 			apply_no, apply_dt, recruit_no, account_id
 		from recruit_applicant
 		where recruit_no = #{recruitNo} and account_id = #{accountId}
 	</select>
 	
 	
 	<select id="selectApplyNo" parameterType="recruitVO" resultType="recruitApplicantVO">
 		select
 			apply_no, apply_dt, recruit_no, account_id
 		from recruit_applicant
 		where recruit_no = #{recruitNo}
 	</select>
 	
 	
 	<select id="selectLikeRecruit" parameterType="recruitVO" resultType="recruitVO">
 		SELECT
		    recruit_no,
		    account_id,
		    pstn_cmmncd_nm
		FROM
		    interestnotices
		WHERE
        	recruit_no = #{recruitNo}
		    and account_id = #{accountId}
		    and pstn_cmmncd_nm = #{pstnCmmncdNm} 
 	</select>
 	
 	<select id="checkApplyNo" parameterType="recruitVO" resultType="recruitApplicantVO">
 		SELECT
	        apply_no,
	        apply_dt,
	        recruit_no,
	        account_id
	    FROM
	        recruit_applicant
	    WHERE
	        recruit_no = #{recruitNo}
	        and account_id = #{accountId}
 	</select>
 	
 	
 	<select id="selectListApplicant" parameterType="string" resultType="resumeVO">
 		SELECT
		    ra.apply_no,
		    ra.recruit_no,
		    ra.account_id,
		    rs.rsm_gender,  
		    rs.edu_nm,
		    rs.rsm_mjr_nm
		FROM
		    recruit_applicant ra
		JOIN
		    resume rs ON ra.account_id = rs.account_id
		WHERE
		    ra.recruit_no = #{recruitNo}
		    AND ra.apply_no LIKE '%' || #{pstnCmmncdNm} || '%'
 	</select>
 	
 	<select id="checkRecruit" parameterType="string" resultType="interestNoticesVO">
 		SELECT
		    recruit_no,
		    account_id,
		    pstn_cmmncd_nm
		FROM
		    interestnotices
		WHERE account_id = #{accountId}
 	</select>
 	
 	
 	<select id="getRecruitEndList" parameterType="recruitVO" resultMap="recruitListMap">
		select distinct recruit_no,
		    recruit_end_dt,
		    ent_nm
		from (
		    SELECT 
		    r.recruit_no,
		    r.pstn_cmmncd_nm,
		    r.recruit_end_dt,
		    r.ent_nm,
		    p.prefer_lang_no,
		    p.prefer_lang_cmmncd_nm,
		    e.esntl_lang_no,
		    e.esntl_lang_cmmncd_nm
		FROM 
		    recruit r
		LEFT OUTER JOIN 
		    prefer_lang p ON r.recruit_no = p.recruit_no AND r.pstn_cmmncd_nm = p.pstn_cmmncd_nm
		LEFT OUTER JOIN
		    esntl_lang e ON r.recruit_no = e.recruit_no AND r.pstn_cmmncd_nm = e.pstn_cmmncd_nm
		)
 		where recruit_end_dt like '%' || #{time} || '%'
 		<include refid="calSearch" />
 	</select>
 	
 	<select id="getRecruitStartList" parameterType="recruitVO" resultMap="recruitListMap">
		select distinct recruit_no,
		    recruit_strt_dt,
		    ent_nm
		from (
		    SELECT 
		    r.recruit_no,
		    r.pstn_cmmncd_nm,
		    r.recruit_strt_dt,
		    r.ent_nm,
		    p.prefer_lang_no,
		    p.prefer_lang_cmmncd_nm,
		    e.esntl_lang_no,
		    e.esntl_lang_cmmncd_nm
		FROM 
		    recruit r
		LEFT OUTER JOIN 
		    prefer_lang p ON r.recruit_no = p.recruit_no AND r.pstn_cmmncd_nm = p.pstn_cmmncd_nm
		LEFT OUTER JOIN
		    esntl_lang e ON r.recruit_no = e.recruit_no AND r.pstn_cmmncd_nm = e.pstn_cmmncd_nm
		)
		where recruit_strt_dt like '%' || #{time} || '%'
		<include refid="calSearch" />
 	</select>
 	
 	
  	<select id="selectListByRecruitNo" parameterType="string" resultType="recruitVO">
		SELECT
		    recruit_no,
		    recruit_ttl,
		    recruit_strt_dt,
		    recruit_end_dt,
		    recruit_yn,
		    recruit_career_code_nm,
		    recruit_career_dt,
		    ent_url,
		    recruit_hit,
		    process_yn,
		    process_amt,
		    recruit_pay,
		    recruit_enroll_ymd,
		    cmmncd_grp_cd,
		    cmmncd_nm1,
		    recruit_cnt,
		    pstn_cmmncd_nm,
		    ent_postcode,
		    ent_nm,
		    ent_no
		FROM
		    recruit
		where recruit_no = #{recruit_no}
 	</select>
 	
 	
 	
 	<select id="getPstnList" resultType="string">
 		select distinct cmmncd_grp_nm from commoncode
		where cmmncd_grp_cd like 'PSTN%'
 	</select>
 	
 	<select id="getLangList" resultType="string">
 		select cmmncd_nm1 from commoncode
		where cmmncd_grp_cd between 'PSTN1' and 'PSTN14'
 	</select>
 	
 	<select id="getGrpList" resultType="string">
 		select distinct cmmncd_grp_nm from commoncode
		where cmmncd_grp_cd like 'LCL%'
 	</select>
 	
 	
 	
 	<select id="selectRecruit" parameterType="string" resultType="recruitVO">
 		select 
 			r.recruit_no, r.ent_no, r.recruit_ttl, 
 			r.recruit_strt_dt, r.recruit_end_dt, r.recruit_yn,
 			r.recruit_career_code_nm, r.recruit_career_dt, r.ent_url,
 			r.recruit_hit, r.process_yn, r.process_amt,
 			r.recruit_pay, r.recruit_enroll_ymd, r.cmmncd_grp_cd,
 			r.cmmncd_nm1, r.recruit_cnt, r.pstn_cmmncd_nm,
 			e.ent_nm
 		from recruit r left join enterprise e on r.ent_no = e.ent_no
 		where r.recruit_no = #{recruitNo} and r.pstn_cmmncd_nm = #{pstnCmmncdNm}
 	</select>
 	
 	
 	
 	
 	
 	<insert id="saveAnswer" parameterType="entIntroQSTNANSRVO">
 		INSERT INTO ent_intro_qstn_ansr (
		    ent_intro_qstn_cn,
		    ent_intro_qstn_dsnct_no,
		    ent_intro_qstn_ansr,
		  	account_id
		) VALUES (
		    #{entIntroQstnCn},
		    #{entIntroQstnDsnctNo},
		    #{entIntroQstnAnsr},
		    #{accountId}
		)
 	</insert>
 	
 	<select id="selectQstnAnsr" parameterType="entIntroQSTNANSRVO" resultType="entIntroQSTNANSRVO">
 		select
 			ent_intro_qstn_cn,
		    ent_intro_qstn_dsnct_no
		from ent_intro_qstn_ansr
		where ent_intro_qstn_cn = #{entIntroQstnCn}
	    and ent_intro_qstn_dsnct_no = #{entIntroQstnDsnctNo}
	    
 	</select>
 	
 	<update id="updateAnswer" parameterType="entIntroQSTNANSRVO">
 		UPDATE ent_intro_qstn_ansr
		SET
		    ent_intro_qstn_ansr = #{entIntroQstnAnsr}
		WHERE
		ent_intro_qstn_cn = #{entIntroQstnCn}
	    AND ent_intro_qstn_dsnct_no = #{entIntroQstnDsnctNo}
 	</update>
 	
 	<select id="setQstnAnsr" parameterType="entIntroQSTNANSRVO" resultType="entIntroQSTNANSRVO">
 		select
 			ent_intro_qstn_cn,
		    ent_intro_qstn_dsnct_no,
		    ent_intro_qstn_ansr
		from ent_intro_qstn_ansr
		where ent_intro_qstn_cn = #{entIntroQstnCn}
	    and ent_intro_qstn_dsnct_no = #{entIntroQstnDsnctNo}
 	</select>
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 </mapper>