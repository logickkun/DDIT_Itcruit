package kr.co.itcruit.mypage.member.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.co.itcruit.enterprise.like.service.ILikeService;
import kr.co.itcruit.mypage.member.service.IMemberService;
import kr.co.itcruit.vo.AccountVO;
import kr.co.itcruit.vo.AvailLangListVO;
import kr.co.itcruit.vo.CommoncodeVO;
import kr.co.itcruit.vo.CustomUser;
import kr.co.itcruit.vo.ResumeVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/myPage/member")
public class MemberController {
	
	@Inject
	private IMemberService memService;
	@Inject
	private ILikeService likeService; // 관심기업, 채용 가져오는 서비스
	
	@PreAuthorize("hasAnyRole('ROLE_AUTH102')")
	@RequestMapping(value = "/index", method = RequestMethod.GET)
	public String index(HttpSession session, Model model) {
		
		String goPage = "";
//		String goPage = "memberPage/home";
		
		//[스프링 시큐리티] 회원 ID를 스프링 시큐리티 UserDetails 정보에서 가져오기
		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		AccountVO account = user.getAccount();
		
		if(account != null) {
			session.setAttribute("SessionInfo", account);
			goPage = "memberPage/home";
		}
		
		return goPage;
	}
	
	@PreAuthorize("hasAnyRole('ROLE_AUTH102')")
	@RequestMapping(value = "/resumeManage", method = RequestMethod.GET)
	public String resumeManage(
			HttpSession session, Model model
			, ResumeVO resumeVO, CommoncodeVO commonVO
			, AvailLangListVO availLangVO) {
		
		String goPage = "";
		
		//[스프링 시큐리티] 회원 ID를 스프링 시큐리티 UserDetails 정보에서 가져오기
		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		AccountVO account = user.getAccount();
		
		if(account != null) {
			
			resumeVO.setAccountId(account.getAccountId());
			
			List<Map<String, Object>> rsmLangList = memService.selectResume(resumeVO);
			System.out.println("rrrrrrrrrrr");
			System.out.println(rsmLangList);
			
			Map<String, List<Map<String, Object>>> groupedData = new HashMap<>();

	        for (Map<String, Object> item : rsmLangList) {
	        	String rsm_no = item.get("RSM_NO").toString();
	        	
	            //rsm_no를 키로 사용. groupedData에 추가
	            if (!groupedData.containsKey(rsm_no)) {
	            	groupedData.put(rsm_no, new ArrayList<>());
	            }
	            
	            groupedData.get(rsm_no).add(item);
	        }

	            //각 항목 groupedData에 추가
            for (Map.Entry<String, List<Map<String, Object>>> entry : groupedData.entrySet()) {
            	String rsmNo = entry.getKey();
            	List<Map<String, Object>> group = entry.getValue();
            	
            	System.out.println("RSM_NO: " + rsmNo);

            	for (Map<String, Object> groupItem : group) {
                    System.out.println(groupItem);
                }
                System.out.println();
            }

			session.setAttribute("SessionInfo", account);
			model.addAttribute("groupItem", rsmLangList);
			goPage = "memberPage/resumeManage";
		}
		
		return goPage;
	}
	
}
