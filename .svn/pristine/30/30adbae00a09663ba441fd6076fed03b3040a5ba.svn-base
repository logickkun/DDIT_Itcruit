<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<style>

.card {
    /* 일반적인 카드 스타일 */
/*     width: 200px; */
/*     height: 300px; */
/*     background-color: #fff; */
/*     border-radius: 10px; */
/*     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */
    transition: transform 0.3s ease; /* transform 속성에 대한 애니메이션 효과를 추가합니다. */
}

.card:hover {
    transform: translateY(-5px); /* 마우스 호버시 카드를 위로 약간 이동시킵니다. */
}

</style>
<c:if test="${likeRecruit eq 'y' }">
	<script>
        $(function() {
            $('.bi-star-fill').toggleClass('text-warning');
        });
    </script>
</c:if>
<main>
	<section class="pt-0">
		<div class="container">
			<div class="row">
				<div class="col-12" style="max-height:350px">
					<!-- Slider START -->
					<div class="tiny-slider arrow-round arrow-blur arrow-hover rounded-2 overflow-hidden">
						<div class="tiny-slider-inner" data-autoplay="false" data-gutter="0" data-arrow="true" data-dots="false" data-items="1">

							<div ></div>

							<!-- Card item START -->
							<a href="#">
								<div class="card overflow-hidden h-500px h-md-350px text-center rounded-0" style="background-image:url(${pageContext.request.contextPath }/resources/assets/images/main/1.png); background-position: center; background-size: contain; background-repeat: no-repeat; ">
									<!-- Background dark overlay -->
									<!-- Background dark overlay -->
									<!-- <div class="bg-overlay bg-dark opacity-6"></div> -->
									<!-- Card image overlay -->
									<div class="card-img-overlay d-flex align-items-center p-2 p-sm-4"> 
										<div class="w-100 my-auto">
											<div class="row justify-content-center">
												<div class="col-11 col-lg-7">
													<!-- Title -->
													<!-- <h1 class="text-white display-6">Discover Lifelong Learning</h1>
													<p class="text-white">This Bootstrap 5 based theme is ideal for all types of sites that offer education such as Kindergarten, School, College, University, Courses Hub, Training Center, or any Academy.</p> -->
													<!-- Button -->
													<!-- <a href="university-admission-form.html" class="btn btn-primary me-2 mb-0">Admissions</a>
													<a href="#" class="btn btn-outline-white mb-0">Learn More</a> -->
												</div>
											</div>
										</div>
									</div>
								</div>
							</a>	
							<!-- Card item END -->
	
							<!-- Card item START -->
							<a href="#">
								<div class="card overflow-hidden h-500px h-md-350px text-center rounded-0" style="background-image:url(${pageContext.request.contextPath }/resources/assets/images/main/2.png); background-position: center; background-size: contain; background-repeat: no-repeat; ">
									<!-- Background dark overlay -->
									<!-- Background dark overlay -->
									<!-- <div class="bg-overlay bg-dark opacity-6"></div> -->
									<!-- Card image overlay -->
									<div class="card-img-overlay d-flex align-items-center p-2 p-sm-4"> 
										<div class="w-100 my-auto">
											<div class="row justify-content-center">
												<div class="col-11 col-lg-7">
													<!-- Title -->
													<!-- <h1 class="text-white display-6">Discover Lifelong Learning</h1>
													<p class="text-white">This Bootstrap 5 based theme is ideal for all types of sites that offer education such as Kindergarten, School, College, University, Courses Hub, Training Center, or any Academy.</p> -->
													<!-- Button -->
													<!-- <a href="university-admission-form.html" class="btn btn-primary me-2 mb-0">Admissions</a>
													<a href="#" class="btn btn-outline-white mb-0">Learn More</a> -->
												</div>
											</div>
										</div>
									</div>
								</div>
							</a>
							<!-- Card item END -->

							<!-- Card item START -->
							<a href="">
								<div class="card overflow-hidden h-500px h-md-350px text-center rounded-0" style="background-image:url(${pageContext.request.contextPath }/resources/assets/images/main/3.png); background-position: center; background-size: contain; background-repeat: no-repeat; ">
									<!-- Background dark overlay -->
									<!-- Background dark overlay -->
									<!-- <div class="bg-overlay bg-dark opacity-6"></div> -->
									<!-- Card image overlay -->
									<div class="card-img-overlay d-flex align-items-center p-2 p-sm-4"> 
										<div class="w-100 my-auto">
											<div class="row justify-content-center">
												<div class="col-11 col-lg-7">
													<!-- Title -->
													<!-- <h1 class="text-white display-6">Discover Lifelong Learning</h1>
													<p class="text-white">This Bootstrap 5 based theme is ideal for all types of sites that offer education such as Kindergarten, School, College, University, Courses Hub, Training Center, or any Academy.</p> -->
													<!-- Button -->
													<!-- <a href="university-admission-form.html" class="btn btn-primary me-2 mb-0">Admissions</a>
													<a href="#" class="btn btn-outline-white mb-0">Learn More</a> -->
												</div>
											</div>
										</div>
									</div>
								</div>
							</a>
							<!-- Card item END -->
						</div>
					<!-- Slider END -->
					</div>
				</div>
			</div>
		</div>
	</section>



	<!-- =======================추천공고 START -->
	<section style="padding: 0;">
		<div class="container">
			<!-- Title -->
			<div class="row mb-3">
				<!-- <div class="col-lg-8 mx-auto text-center"> -->
					<h3 class="fs-1" >추천공고</h3>
					<br><br>
					<!-- <p class="mb-0">Choose from hundreds of courses from specialist organizations</p> -->
				<!-- </div> -->
			</div>

			<!-- Tabs START -->
			<!-- <ul class="nav nav-pills nav-pills-bg-soft justify-content-sm-center mb-4 px-3" id="course-pills-tab" role="tablist"> -->
				<!-- Tab item -->
				<!-- <li class="nav-item me-2 me-sm-5">
					<button class="nav-link mb-2 mb-md-0 active" id="course-pills-tab-1" data-bs-toggle="pill" data-bs-target="#course-pills-tabs-1" type="button" role="tab" aria-controls="course-pills-tabs-1" aria-selected="false">Web Design</button>
				</li> -->
				<!-- Tab item -->
				<!-- <li class="nav-item me-2 me-sm-5">
					<button class="nav-link mb-2 mb-md-0" id="course-pills-tab-2" data-bs-toggle="pill" data-bs-target="#course-pills-tabs-2" type="button" role="tab" aria-controls="course-pills-tabs-2"	aria-selected="false">Development</button>
				</li> -->
				<!-- Tab item -->
				<!-- <li class="nav-item me-2 me-sm-5">
					<button class="nav-link mb-2 mb-md-0" id="course-pills-tab-3" data-bs-toggle="pill" data-bs-target="#course-pills-tabs-3" type="button" role="tab" aria-controls="course-pills-tabs-3" aria-selected="false">Graphic Design</button>
				</li> -->
				<!-- Tab item -->
				<!-- <li class="nav-item me-2 me-sm-5">
					<button class="nav-link mb-2 mb-md-0" id="course-pills-tab-4" data-bs-toggle="pill" data-bs-target="#course-pills-tabs-4" type="button" role="tab" aria-controls="course-pills-tabs-4" aria-selected="false">Marketing</button>
				</li> -->
				<!-- Tab item -->
				<!-- <li class="nav-item me-2 me-sm-5">
					<button class="nav-link mb-2 mb-md-0" id="course-pills-tab-5" data-bs-toggle="pill" data-bs-target="#course-pills-tabs-5" type="button" role="tab" aria-controls="course-pills-tabs-5"	aria-selected="false">Finance</button>
				</li>
			</ul> -->
			<!-- Tabs END -->

			<!-- Tabs content START -->
			<div class="tab-content" id="course-pills-tabContent">
				<!-- Content START -->
				<div class="tab-pane fade show active" id="course-pills-tabs-1" role="tabpanel" aria-labelledby="course-pills-tab-1">
					<div class="row g-4 cardArea">
					
					<c:choose>
						<c:when test="${empty initRecruitList }">
							<div class="col-sm-6 col-lg-4 col-xl-3">
							<div class="card shadow h-100">
							
								<!-- Image -->
								<img src="${pageContext.request.contextPath }/resources/assets/images/logoITcruitSolid.png" class="card-img-top" alt="course image" style="padding: 10px;">
								
								<!-- Card body -->
								<div class="card-body pb-0">
									<!-- Badge and favorite -->
									<div class="d-flex justify-content-between mb-2">
										<!-- <a href="#" class="badge bg-purple bg-opacity-10 text-purple">All level</a> -->
										
									</div>
									<!-- Title -->
									<a href="#">
									<p class="mb-2 text-truncate-2">정보없음</p>
									<h5 class="card-title fw-normal">정보없음</h5>
									</a>
									<!-- Rating star -->
									<!-- <ul class="list-inline mb-0">
										<li class="list-inline-item me-0 small"><i class="fas fa-star text-warning"></i></li>
										<li class="list-inline-item me-0 small"><i class="fas fa-star text-warning"></i></li>
										<li class="list-inline-item me-0 small"><i class="fas fa-star text-warning"></i></li>
										<li class="list-inline-item me-0 small"><i class="fas fa-star text-warning"></i></li>
										<li class="list-inline-item me-0 small"><i class="far fa-star text-warning"></i></li>
										<li class="list-inline-item ms-2 h6 fw-light mb-0">4.0/5.0</li>
									</ul> -->
								</div>
								<!-- Card footer -->
								<div class="card-footer pt-0 pb-3">
									<hr>
									<div class="d-flex justify-content-between">
										<span class="h6 fw-light mb-0"><i class="far fa-clock text-danger me-2"></i>정보없음</span>
										<a href="#" class="h6 mb-0"><i class="bi bi-star-fill" style="color: darkgray;"></i></a>
									</div>
								</div>
							</div>
						</div>
						</c:when>
						
						<c:otherwise>
						<!-- Card item START -->
						<c:forEach items="${initRecruitList }" var="recruit">
						<div class="col-sm-6 col-lg-4 col-xl-3">
							<div class="card shadow h-100">
								<!-- Image -->
<%-- 								<img src="/main/logodisplay?entNo=${recruit.entNo }" alt="기업로고" style="display: block; margin: 0 auto; padding: 10px; width: 250px; height: 180px;"> --%>
								<!-- Card body -->
								<div class="card-body pb-0">
									<!-- Badge and favorite -->
									<div class="d-flex justify-content-between mb-2">
									</div>
									<!-- Title -->
									<c:choose>
										<c:when test="${fn:startsWith(recruit.recruitEndDt, 'D')}">
											<a class="atag" href="/main/recruitDetail.do?recruitNo=${recruit.recruitNo }&pstnCmmncdNm=${recruit.pstnCmmncdNm}">
												<p class="mb-2 text-truncate-2">${recruit.entNm }</p>
												<h5 class="card-title fw-normal">${recruit.recruitTtl }</h5>
											</a>
										</c:when>
										<c:otherwise>
											<a class="atagDone" href="">
												<p class="mb-2 text-truncate-2">${recruit.entNm }</p>
												<h5 class="card-title fw-normal">${recruit.recruitTtl }</h5>
											</a>
										</c:otherwise>
									</c:choose>
									
									
								</div>
								<!-- Card footer -->
								<div class="card-footer pt-0 pb-3">
									<hr>
									<div class="d-flex justify-content-between">
										<span class="h6 fw-light mb-0 endDate"> <c:if test="${fn:startsWith(recruit.recruitEndDt, 'D')}"><i class="far fa-clock text-danger me-2"></i></c:if> 
										<font <c:if test="${fn:startsWith(recruit.recruitEndDt, '공고')}">color="lightgray"</c:if>>${recruit.recruitEndDt }</font></span>
										<a class="h6 mb-0" ><i class="bi bi-star-fill" style="color: darkgray;"></i></a>
									</div>
								</div>
							</div>
						</div>
						</c:forEach>
						</c:otherwise>
					</c:choose>
						<!-- Card item END -->
						
					</div> <!-- Row END -->
				</div>
				<!-- Content END -->
			</div>
		</div>
	</section>
	
	<sec:csrfInput/>
</main>
<script type="text/javascript">
$(document).ready(function() {
	var accountId = "${ID }";
// 	console.log(accountId);
	if(accountId){
        $.ajax({
            url: "/main/interestList.do?accountId=" + accountId,
            type: "get",
            contentType: "application/json; charset=utf-8",
            beforeSend: function(xhr) {
                xhr.setRequestHeader(header, token);
            },
            success: function(response) {
                console.log(response);
                $('.card').each(function() {
                    var card = $(this);
                    bindCardEvents(card, response); // 각 카드에 대한 이벤트 바인딩
                });
            }
        });
	}
	
	$(".g-4").on("click", ".atagDone", function(event){
		event.preventDefault();
		Swal.fire(
    			  '이미 마감된 공고입니다!'
    			)
	});
 
    var slider = tns({
        container: '.tiny-slider-inner',
        items: 1,
        autoplay: true,
        autoplayTimeout: 5000, // 5초
        autoplayButtonOutput: false,
        controls: false,
        nav: false
    });
    
    let isFetching = false; // 리스트를 가져오는 중인지 여부를 나타내는 변수
    let isEnd = false; // 더 이상 리스트를 가져올 필요가 없는지 여부를 나타내는 변수

    // 스크롤 이벤트 핸들러
    function handleScroll() {
        if (!isFetching && !isEnd) {
            let $window = $(window);
            let scrollTop = $window.scrollTop();
            let windowHeight = $window.height();
            let documentHeight = $(document).height();
            
            // scrollbar의 thumb가 바닥 전 150px까지 도달 하면 리스트를 가져온다.
            if (scrollTop + windowHeight + 150 > documentHeight) {
                fetchList();
            }
        }
    }

    // 페이지 로드 시 스크롤 이벤트 발생 시켜 리스트를 가져온다.
    $(window).trigger('scroll');

    // 스크롤 이벤트 리스너 등록
    $(window).scroll(handleScroll);

 // 리스트 가져오는 함수
    function fetchList() {
        if (isEnd || isFetching) {
            return;
        }
        
        // 리스트를 가져오는 중임을 표시
        isFetching = true;

        // 현재 화면에 표시된 리스트 개수
        let currentListSize = $("#course-pills-tabs-1 .card").length;
        
        // 다음 페이지 계산
        let currentPage = Math.ceil(currentListSize / 20) + 1; 
        
        $.ajax({
            url: "/main/paginationInfo?currentPage="+currentPage,
            type: "POST",
            contentType : "application/json; charset=utf-8",
            beforeSend: function(xhr) {
                xhr.setRequestHeader(header, token);
            },
            success: function(response) {
                let initRecruitList = response;
                
                if (initRecruitList.length === 0) {
                    isEnd = true; // 더 이상 데이터가 없으면 isEnd를 true로 설정
                    return;
                }
                
                // 날짜 형식 변경 및 마감일 계산
                initRecruitList.forEach(function(recruit) {
                     let daysDiff = calculateDaysDifference(recruit.recruitEndDt);
                     if (daysDiff < 0) {
                         recruit.recruitEndDt = "공고마감";
                     } else {
                         recruit.recruitEndDt = "D-" + daysDiff;
                     }
                });
                
                // initRecruitList 배열의 각 요소에 접근하여 카드 HTML을 생성
                let cardHTML = "";
                for (let i = 0; i < initRecruitList.length; i++) {
                    let recruit = initRecruitList[i];
                    let endDateElement = document.createElement("span"); // 새로운 span 요소 생성
                    endDateElement.classList.add("h6", "fw-light", "mb-0", "endDate"); // 클래스 추가

                    // 마감일이 "D-"로 시작하는 경우
                    if (recruit.recruitEndDt.startsWith("D-")) {
                        let daysDiff = parseInt(recruit.recruitEndDt.substring(2)); // 남은 일수 추출
                        if (daysDiff < 0) {
                            endDateElement.innerHTML = '<i class="far fa-clock text-danger me-2"></i>공고마감'; // 마감된 경우
                            endDateElement.querySelector("i").style.display = "none"; // 아이콘 숨기기
                        } else {
                            endDateElement.innerHTML = '<i class="far fa-clock text-danger me-2"></i>D-' + daysDiff; // 남은 일수 표시
                        }
                    }
                    // 마감일이 "공고마감"인 경우
                    else if (recruit.recruitEndDt === "공고마감") {
                        endDateElement.innerHTML = '<font color="lightgray">공고마감</font>';
                    }

                    // 카드의 마감일 엘리먼트를 찾아 교체
                    let cardFooter = document.querySelector(".endDate");
                    if (cardFooter) {
                        cardFooter.parentNode.replaceChild(endDateElement, cardFooter);
                    }

                    // 카드 HTML 문자열 구성
                    cardHTML += '<div class="col-sm-6 col-lg-4 col-xl-3">' +
                        '<div class="card shadow h-100">' +
                            '<img src="/main/logodisplay?entNo=' + recruit.entNo + '" alt="기업로고" style="display: block; margin: 0 auto; padding: 10px; width: 250px; height: 180px;">' +
                            '<div class="card-body pb-0">' +
                                '<div class="d-flex justify-content-between mb-2">' +
                                '</div>' +
                                '<a class="atag" href="/main/recruitDetail.do?recruitNo=' + recruit.recruitNo + '&pstnCmmncdNm=' + recruit.pstnCmmncdNm + '">' +
                                    '<p class="mb-2 text-truncate-2">' + recruit.entNm + '</p>' +
                                    '<h5 class="card-title fw-normal">' + recruit.recruitTtl + '</h5>' +
                                '</a>' +
                            '</div>' +
                            '<div class="card-footer pt-0 pb-3">' +
                                '<hr>' +
                                '<div class="d-flex justify-content-between">' +
                                    '<span class="h6 fw-light mb-0 endDate">' +
                                        endDateElement.innerHTML +
                                    '</span>' +
                                    '<a class="h6 mb-0"><i class="bi bi-star-fill" style="color: darkgray;"></i></a>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                    '</div>';
                }
                
                // 생성된 카드 HTML을 삽입
                $(".cardArea").append(cardHTML);

                // 리스트 가져오기가 완료되었으므로 isFetching 상태 변경
                isFetching = false;
                
                // 마감된 공고에 대한 처리
                $(".endDate:contains('공고마감')").prev().find(".fa-clock").hide(); // 아이콘 숨기기
                $(".endDate:contains('공고마감')").closest(".card-footer").prev().find(".atag").addClass("atagDone").removeAttr("href"); // 클릭 이벤트 방지
                
                // 리스트를 가져온 후에 bindCardEvents 함수 호출
                $(".card").each(function() {
                    var card = $(this);
                    bindCardEvents(card, initRecruitList); // 각 카드에 대한 이벤트 바인딩
                });
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error("Error fetching pagination info: " + errorThrown);
                // 리스트 가져오기가 실패했으므로 isFetching 상태 변경
                isFetching = false;
            }
        });
    }

    // 카드에 대한 이벤트 바인딩 함수
    function bindCardEvents(card, response) {
        $('.card-body', card).each(function() {
            var href = $(this).find('.atag').attr('href');

            if (!href) {
                return;
            }
            // URL에서 '?' 뒤의 쿼리 문자열 추출
            var queryString = href.split('?')[1];

            // 쿼리 문자열을 '&'로 분할하여 각 매개변수 추출
            var queryParams = queryString.split('&');
            
            var recruitNo, pstnCmmncdNm;
            var accountId = "${ID }";
//            	console.log(accountId);
            // 각 매개변수에 대해 반복
            queryParams.forEach(function(param) {
                // '='로 매개변수 이름과 값 분리
                var pair = param.split('=');
                var paramName = pair[0];
                var paramValue = pair[1];
		
                // 추출된 매개변수에 따라 처리
                if (paramName === 'recruitNo') {
                    recruitNo = paramValue;
                } else if (paramName === 'pstnCmmncdNm') {
                    pstnCmmncdNm = paramValue;
                }
            });
//             console.log("accountId "+accountId);
//         	console.log("recruitNo "+recruitNo);
//         	console.log("pstnCmmncdNm "+pstnCmmncdNm);
            // 서버에서 받은 데이터와 일치하는지 확인
            var matchingData = response.find(function(data) {
//             	console.log("data.accountId "+data.accountId);
//             	console.log("data.recruitNo "+data.recruitNo);
//             	console.log("data.pstnCmmncdNm "+data.pstnCmmncdNm);
//             	console.log("accountId"+accountId);
//             	console.log("recruitNo"+recruitNo);
//             	console.log("pstnCmmncdNm"+pstnCmmncdNm);
                return data.accountId === accountId && data.recruitNo === recruitNo && data.pstnCmmncdNm === pstnCmmncdNm;
            });

            // 일치하는 경우, 별표 아이콘 추가
            if (matchingData) {
            	console.log(matchingData);
                card.find('.bi-star-fill').addClass('text-warning');
            }
        });
    }
    
    // 오늘 날짜를 가져오는 함수
    function getTodayDate() {
        let today = new Date();
        let year = today.getFullYear();
        let month = String(today.getMonth() + 1).padStart(2, '0'); // 월은 0부터 시작하므로 +1
        let day = String(today.getDate()).padStart(2, '0');
        return year + '-' + month + '-' + day;
    }

    // 각 채용 공고의 마감일과 오늘 날짜 사이의 차이 계산하는 함수
    function calculateDaysDifference(recruitEndDt) {
        let endDt = new Date(recruitEndDt); // 문자열 형식의 날짜를 Date 객체로 변환
        let today = new Date(getTodayDate()); // 오늘 날짜를 가져옴

        // 날짜 차이 계산
        let timeDiff = endDt.getTime() - today.getTime();
     	// milliseconds를 days로 변환
        let daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)); 

        return daysDiff;
    }
    
});

// function startClick(event){
// 	// 클릭된 요소가 'card' 클래스를 갖는 요소인지 확인
//     var cardElement = event.target.closest('.card');

//     // cardElement를 찾았는지 확인
//     if (cardElement) {
//         var accountId = "${ID}";
//         console.log(accountId);
        
//         if (accountId == null || accountId === "") {
//             alert("로그인 후 이용");
//             return;
//         }
//         // cardElement가 있는 경우에 대한 추가 로직 작성
//         var atagHref = cardElement.querySelector('.atag').getAttribute('href');
// //         console.log("atagHref:", atagHref);
        
//         if (!atagHref) {
// 		    return;
// 		}
// 		// URL에서 '?' 뒤의 쿼리 문자열 추출
// 		var queryString = atagHref.split('?')[1];
		
// 		// 쿼리 문자열을 '&'로 분할하여 각 매개변수 추출
// 		var queryParams = queryString.split('&');
		
// 		var recruitNo, pstnCmmncdNm;
		
// 		// 각 매개변수에 대해 반복
// 		queryParams.forEach(function(param) {
// 		    // '='로 매개변수 이름과 값 분리
// 		    var pair = param.split('=');
// 		    var paramName = pair[0];
// 		    var paramValue = pair[1];
		
// 		    // 추출된 매개변수에 따라 처리
// 		    if (paramName === 'recruitNo') {
// 		        recruitNo = paramValue;
// 		    } else if (paramName === 'pstnCmmncdNm') {
// 		        pstnCmmncdNm = paramValue;
// 		    }
// 		});

// 		console.log("recruitNo:", recruitNo);
// 		console.log("pstnCmmncdNm:", pstnCmmncdNm);

// 		var obj = {
//           	accountId : accountId,
//         	recruitNo : recruitNo,
//         	pstnCmmncdNm : pstnCmmncdNm
//         }
        
//        	if($('.bi-star-fill').hasClass('text-warning')){
       		
//        		$.ajax({
//                	type : "post",
//                	url : "/like/hateRecruit.do",
//                	contentType : "application/json; charset=utf-8",
//                	data : JSON.stringify(obj),
//                	beforeSend: function(xhr) {
//                        xhr.setRequestHeader(header, token);
//                    },
//                    success : function(result){
//                    	console.log("!!!!" + result);
//                    	if(result == "Y"){
//                    		$('.bi-star-fill').removeClass('text-warning');
//    	                	alert("관심공고 등록취소");
//                    	}else{
//                    		alert("관심공고 등록취소 실패");
//                    	}
//                    }
                   
//                });
       		
//        	}else{
       		
//        		$.ajax({
//                	type : "post",
//                	url : "/like/loveRecruit.do",
//                	contentType : "application/json; charset=utf-8",
//                	data : JSON.stringify(obj),
//                	beforeSend: function(xhr) {
//                        xhr.setRequestHeader(header, token);
//                    },
//                    success : function(result){
//                    	console.log("!!!!" + result);
//                    	if(result == "Y"){
//                    		$('.bi-star-fill').addClass('text-warning');
//                    		alert("관심공고 등록성공");
//                    	}else{
//                    		alert("관심공고 등록실패");
//                    	}
//                 }
               
//             });
//        	}

//     }

// }
// $(".g-4").on("click", ".bi-star-fill", function(event) {
//     startClick(event); // 이벤트 객체 전달
// });
</script>