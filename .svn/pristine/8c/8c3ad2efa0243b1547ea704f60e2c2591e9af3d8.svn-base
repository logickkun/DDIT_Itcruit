package kr.co.itcruit.account.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.co.itcruit.ServiceResult;
import kr.co.itcruit.account.service.IMemberAccountService;
import kr.co.itcruit.vo.AccountVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/account/member")
public class MemberAccountController {

	@Inject
	private IMemberAccountService memAccountService;
	
	//회원가입
	@RequestMapping(value="/signup.do", method = RequestMethod.POST)
	public String memberSignup(HttpServletRequest req, AccountVO accountVO,
			Model model, RedirectAttributes ra){
		
		String goPage = "";
		Map<String, String> errors = new HashMap<String, String>();
		if(StringUtils.isBlank(accountVO.getAccountNm())) {
			errors.put("accuntNm", "아이디 입력");
		}
		if(StringUtils.isBlank(accountVO.getAccountPswd())) {
			errors.put("accuntPswd", "비밀번호 입력");
		}
		
		// 에러발생
		if(errors.size() > 0) {
			model.addAttribute("errors", errors);
			model.addAttribute("accountVO", accountVO);
			goPage = "conn/registerForm";
		}else {
			// 정상데이터
			ServiceResult result = memAccountService.signup(req, accountVO);
			if(result.equals(ServiceResult.OK)) { // 가입 성공
				System.out.println("dassaddasadsadasdasd>>>>>>>>>>>>>>>>>>>>>>>>asdasads");
				log.info(accountVO.getAccountAddr1());
				log.info(accountVO.getAccountAddr2());
				log.info(accountVO.getAccountId());
				log.info(accountVO.getAccountMail());
				log.info(accountVO.getAccountNick());
				log.info(accountVO.getAccountNm());
				log.info(accountVO.getAccountPswd());
				log.info(accountVO.getAccountSttsCmmncd());
				log.info(accountVO.getAccountTell());
				log.info(accountVO.getAccountZip());
				log.info(accountVO.getAuthCmmncd());
				log.info(accountVO.getEnabled());
				
				ra.addFlashAttribute("message", "회원가입 완료");
				goPage = "redirect:/main/loginForm.do";
			}else {	// 가입하기 실패
				model.addAttribute("message", "서버에러, 재시도!");
				model.addAttribute("account", accountVO);
				goPage = "conn/registerForm";
			}
		}
		
		return goPage;
	}
	
	//로그인
	@RequestMapping(value="/signin.do", method = RequestMethod.POST)
	public String memberSignin(){
		return "";
	}
	
	//아이디찾기
	@RequestMapping(value="/searchId.do", method = RequestMethod.POST)
	public String memberSearchIdByMail(){
		return "";
	}
	
	
	//비밀번호 찾기
	@RequestMapping(value="/searchPw.do", method = RequestMethod.POST)
	public String memberSearchPwByMail(){
		return "";
	}
	
}
