<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.co.itcruit.mapper.IMyEnterpriseMapper">
 
 
 	<resultMap type="recruitVO" id="recruitMap">
 		<id property="recruitNo" column="recruit_no" />
		<result property="entNo" column="ent_no" />
		<result property="recruitTtl" column="recruit_ttl" />
		<result property="recruitStrtDt" column="recruit_strt_dt" />
		<result property="recruitEndDt" column="recruit_end_dt" />
		<result property="recruitYn" column="recruit_yn" />
		<result property="recruitCareerCodeNm" column="recruit_career_code_nm" />
		<result property="recruitCareerDt" column="recruit_career_dt" />
		<result property="entUrl" column="ent_url" />
		<result property="recruitHit" column="recruit_hit" />
		<result property="processYn" column="process_yn" />
		<result property="processAmt" column="process_amt" />
		<result property="recruitPay" column="recruit_pay" />
		<result property="recruitEnrollYmd" column="recruit_enroll_ymd" />
		<result property="entPostcode" column="ent_postcode" />
		<result property="cmmncdGrpCd" column="cmmncd_grp_cd" />
		<result property="cmmncdNm1" column="cmmncd_nm1" />
		<result property="recruitCnt" column="recruit_cnt" />
		<result property="pstnCmmncdNm" column="pstn_cmmncd_nm" />
 		<collection property="hireSttsList" resultMap="hireSttsMap"/>
 		<collection property="PreferLangList" resultMap="PreferLangMap"/>
 		<collection property="esntlLangList" resultMap="esntlLangMap"/>
 	</resultMap>
 	
 	
 	<resultMap type="hireSttsVO" id="hireSttsMap">
	 	<id property="hireSttsNo" column="hire_stts_no" />
		<result property="recruitNo" column="recruit_no" />
		<result property="hireCmmndNm" column="hire_cmmnd_nm" />
 	</resultMap>
 	
 	<resultMap type="preferLangVO" id="PreferLangMap">
 		<id property="preferLangNo" column="prefer_lang_no" />
		<result property="recruitNo" column="recruit_no" />
		<result property="preferLangCmmncdNm" column="prefer_lang_cmmncd_nm" />
 	</resultMap>
 	
 	<resultMap type="esntlLangVO" id="esntlLangMap">
 		<id property="esntlLangNo" column="esntl_lang_no" />
		<result property="recruitNo" column="recruit_no" />
		<result property="esntlLangCmmncdNm" column="esntl_lang_cmmncd_nm" />
 	</resultMap>

	<insert id="recruitRegisterinsert" parameterType="recruitVO">
	
	    MERGE INTO recruit trg
	    
	    USING (
	    
	        SELECT 
	        
	            #{recruitNo} AS recruit_no, 
	            #{entNo} AS ent_no, 
	            #{recruitTtl} AS recruit_ttl, 
	            #{recruitStrtDt} AS recruit_strt_dt, 
	            #{recruitEndDt} AS recruit_end_dt,
	            #{recruitYn} AS recruit_yn, 
	            #{recruitCareerCodeNm} AS recruit_career_code_nm, 
	            #{recruitCareerDt} AS recruit_career_dt, 
	            #{entUrl} AS ent_url,
	            #{recruitHit} AS recruit_hit, 
	            #{processYn} AS process_yn, 
	            #{processAmt} AS process_amt, 
	            #{recruitPay} AS recruit_pay, 
	            SYSDATE AS recruit_enroll_ymd,
	            #{cmmncdGrpCd} AS cmmncd_grp_cd, 
	            #{cmmncdNm1} AS cmmncd_nm1, 
	            #{recruitCnt} AS recruit_cnt, 
	            #{pstnCmmncdNm} AS pstn_cmmncd_nm, 
	            #{entPostcode} AS ent_postcode,
	            #{entNm} AS ent_nm
	            
	        FROM dual
	        
	    ) src
	    
	    ON (trg.recruit_no = src.recruit_no AND trg.pstn_cmmncd_nm = src.pstn_cmmncd_nm)
	    
	    WHEN MATCHED THEN
	    
	        UPDATE SET 
	            trg.ent_no = src.ent_no,
	            trg.recruit_ttl = src.recruit_ttl,
	            trg.recruit_strt_dt = src.recruit_strt_dt,
	            trg.recruit_end_dt = src.recruit_end_dt,
	            trg.recruit_yn = src.recruit_yn,
	            trg.recruit_career_code_nm = src.recruit_career_code_nm,
	            trg.recruit_career_dt = src.recruit_career_dt,
	            trg.ent_url = src.ent_url,
	            trg.recruit_hit = src.recruit_hit,
	            trg.process_yn = src.process_yn,
	            trg.process_amt = src.process_amt,
	            trg.recruit_pay = src.recruit_pay,
	            trg.recruit_enroll_ymd = src.recruit_enroll_ymd,
	            trg.cmmncd_grp_cd = src.cmmncd_grp_cd,
	            trg.cmmncd_nm1 = src.cmmncd_nm1,
	            trg.recruit_cnt = src.recruit_cnt,
	            trg.ent_postcode = src.ent_postcode,
	            trg.ent_nm = src.ent_nm
	            
	    WHEN NOT MATCHED THEN
	    
	        INSERT (
	        
	            recruit_no, ent_no, recruit_ttl, recruit_strt_dt, recruit_end_dt, recruit_yn, recruit_career_code_nm,
	            recruit_career_dt, ent_url, recruit_hit, process_yn, process_amt, recruit_pay, recruit_enroll_ymd,
	            cmmncd_grp_cd, cmmncd_nm1, recruit_cnt, pstn_cmmncd_nm, ent_postcode, ent_nm
	        )
	        
	        VALUES (
	        
	            src.recruit_no, src.ent_no, src.recruit_ttl, src.recruit_strt_dt, src.recruit_end_dt, src.recruit_yn, src.recruit_career_code_nm,
	            src.recruit_career_dt, src.ent_url, src.recruit_hit, src.process_yn, src.process_amt, src.recruit_pay, src.recruit_enroll_ymd,
	            src.cmmncd_grp_cd, src.cmmncd_nm1, src.recruit_cnt, src.pstn_cmmncd_nm, src.ent_postcode, src.ent_nm
	        )
	        
	        
	        
	</insert>

 	
 	<insert id="hireSttsInsert" parameterType="recruitVO">
 	
		MERGE INTO hire_stts h
		USING (
			
			SELECT #{recruitNo} AS recruitNo, 
			#{hireCmmncdNm} AS hireCmmncdNm,
			#{pstnCmmncdNm} AS pstnCmmncdNm,
			#{mergeCount} AS mergeCount 
		
		FROM dual) v
		
		ON (1 = v.mergeCount AND h.pstn_cmmncd_nm = v.pstnCmmncdNm)
		
		WHEN MATCHED THEN
		  UPDATE SET h.hire_cmmnd_nm = v.hireCmmncdNm
		  DELETE WHERE (v.hireCmmncdNm IS NOT NULL)
		  
		WHEN NOT MATCHED THEN
		  INSERT (hire_stts_no, recruit_no, hire_cmmnd_nm, PSTN_CMMNCD_NM)
		  VALUES (SEQ_HIRE_STTS_NO.NEXTVAL, v.recruitNo, v.hireCmmncdNm, v.pstnCmmncdNm)
		  WHERE (v.hireCmmncdNm IS NOT NULL)

 	
 	</insert>
 	
 	<insert id="esntlLangInsert" parameterType="recruitVO">
 	
 		MERGE INTO esntl_lang e
 		USING (
 			
 			SELECT 
 			
 				#{recruitNo} AS recruitNo,
 				#{esntlLangCmmncdNm} AS esntlLangCmmncdNm,
 				#{pstnCmmncdNm} AS pstnCmmncdNm,
 				#{mergeCount} AS mergeCount
 				
 			FROM 
 				
 				DUAL
 		
 		) v
 		
 		
 		ON(1 = v.mergeCount AND e.pstn_cmmncd_nm = v.pstnCmmncdNm)
 		
 		WHEN MATCHED THEN
 			UPDATE SET e.esntl_lang_cmmncd_nm = v.esntlLangCmmncdNm
 			DELETE WHERE (v.esntlLangCmmncdNm IS NOT NULL)
 			
 		WHEN NOT MATCHED THEN
 		
 			INSERT (esntl_lang_no, recruit_no, esntl_lang_cmmncd_nm, PSTN_CMMNCD_NM)
 			VALUES (SEQ_ESNTL_LANG_NO.NEXTVAL, v.recruitNo, v.esntlLangCmmncdNm, v.pstnCmmncdNm)
 			WHERE (v.esntlLangCmmncdNm IS NOT NULL)
 	
 	</insert>
 	
 	<insert id="preferLangInsert" parameterType="recruitVO">
 	
 		MERGE INTO "prefer_lang" p
 		USING (
 		
 			SELECT
 				
 				#{recruitNo} AS recruitNo,
 				#{preferLangCmmncdNm} AS preferLangCmmncdNm,
 				#{pstnCmmncdNm} AS pstnCmmncdNm,
 				#{mergeCount} AS mergeCount
 				
 			FROM 
 			
 				DUAL
 		
 		) v
 		
 		ON (1 = v.mergeCount AND p.pstn_cmmncd_nm = v.pstnCmmncdNm)
 		WHEN MATCHED THEN
 			
 			UPDATE SET p.prefer_lang_cmmncd_nm = v.preferLangCmmncdNm
 			DELETE WHERE (v.preferLangCmmncdNm IS NOT NULL)
 		
 		WHEN NOT MATCHED THEN
 		
 			INSERT("prefer_lang_no", RECRUIT_NO, PREFER_LANG_CMMNCD_NM, PSTN_CMMNCD_NM)
 			VALUES(SEQ_PREFER_LANG_NO.NEXTVAL,  #{recruitNo}, #{preferLangCmmncdNm}, #{pstnCmmncdNm})
 			WHERE(v.preferLangCmmncdNm IS NOT NULL)
 			
 	</insert>
 	
 	<select id="recruitSelectList" resultType="recruitVO">
		SELECT
		    recruit_no,
		    ent_no,
		    recruit_ttl,
		    recruit_strt_dt,
		    recruit_end_dt,
		    recruit_yn,
		    recruit_career_code_nm,
		    recruit_career_dt,
		    ent_url,
		    recruit_hit,
		    process_yn,
		    process_amt,
		    recruit_pay,
		    recruit_enroll_ymd,
		    cmmncd_grp_cd,
		    cmmncd_nm1,
		    recruit_cnt,
		    pstn_cmmncd_nm
		FROM
			recruit
 	
 	</select>
 	
 	
 	<select id="recruitSelectInfo" parameterType="String" resultMap="recruitMap">
 	
		SELECT
		    r.recruit_no,
		    r.ent_no,
		    r.ent_postcode,
		    r.recruit_ttl,
		    r.recruit_strt_dt,
		    r.recruit_end_dt,
		    r.recruit_yn,
		    r.recruit_career_code_nm,
		    r.recruit_career_dt,
		    r.ent_url,
		    r.recruit_hit,
		    r.process_yn,
		    r.process_amt,
		    r.recruit_pay,
		    r.recruit_enroll_ymd,
		    r.cmmncd_grp_cd,
		    r.cmmncd_nm1,
		    r.recruit_cnt,
		    r.ent_nm,
		    r.pstn_cmmncd_nm,
		    hs.hire_cmmnd_nm,
		    hs.pstn_cmmncd_nm,
		    pl.prefer_lang_cmmncd_nm,
		    pl.pstn_cmmncd_nm,
		    el.esntl_lang_cmmncd_nm,
		    el.pstn_cmmncd_nm
		FROM
		
		    recruit r
		    
		LEFT JOIN
		
    		hire_stts hs ON r.recruit_no = hs.recruit_no AND r.pstn_cmmncd_nm = hs.pstn_cmmncd_nm

		    
		LEFT JOIN
		
    		"prefer_lang" pl ON r.recruit_no = pl.recruit_no AND r.pstn_cmmncd_nm = pl.pstn_cmmncd_nm

		LEFT JOIN
		
    		esntl_lang el ON r.recruit_no = el.recruit_no AND r.pstn_cmmncd_nm = el.pstn_cmmncd_nm
		    
		WHERE
		
		    r.recruit_no = #{recruitNo} AND r.pstn_cmmncd_nm = #{pstnCmmncdNm}
 	
 	</select>
 	
 	

 </mapper>