package kr.co.itcruit.mypage.admin.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.co.itcruit.ServiceResult;
import kr.co.itcruit.board.service.IFreeBoardService;
import kr.co.itcruit.mypage.admin.service.IAdminService;
import kr.co.itcruit.vo.AccountVO;
import kr.co.itcruit.vo.AtchVO;
import kr.co.itcruit.vo.BoardReportVO;
import kr.co.itcruit.vo.BoardVO;
import kr.co.itcruit.vo.CustomUser;
import kr.co.itcruit.vo.MidPaginationVO;
import kr.co.itcruit.vo.RecruitPaginationVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/myPage/admin")
@Slf4j
public class AdminController {

	static String bbsCtgryCmmncd = "BBS103";
	
	@Inject
	private IAdminService adminService;
	
	@Inject
	private IFreeBoardService freeBoardService;
	
	@RequestMapping(value = "/index", method = RequestMethod.GET)
	public String index() {
		
		return "admin/home";
	}
	

	@RequestMapping(value = "/entManagment", method = RequestMethod.GET)
	public String entManagment() {
		return "admin/entManagement";
	}
	
	@RequestMapping(value = "/memberManagment", method = RequestMethod.GET)
	public String memberManagment() {
		return "admin/memberManagement";
	}
	
	@RequestMapping(value = "/freeBoard.do", method = RequestMethod.GET)
	public ModelAndView freeBoardManagment(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "title") String searchType,
			@RequestParam(required = false) String searchWord,
			HttpServletRequest req) {
		
		ModelAndView mav = new ModelAndView();
		
		MidPaginationVO<BoardReportVO> pagingVO = new MidPaginationVO<BoardReportVO>();
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			
			mav.addObject("searchType", searchType);
			mav.addObject("searchWord", searchWord);
		}
		
		pagingVO.setStartRow(1);
		pagingVO.setEndRow(10);
		
		List<BoardReportVO> dataList = freeBoardService.adminfreeBoardReport(pagingVO);
		pagingVO.setDataList(dataList);
		
		log.info("$$$$$$$$%%%%" + pagingVO);
		log.info("$$$$$$$$%%%%" + dataList);
		
		mav.addObject("pagingVO", pagingVO);
		mav.setViewName("admin/freeBoard");
		return mav;
	}
	

	
	@RequestMapping(value = "/faq", method = RequestMethod.GET)
	public ModelAndView faqManagmentList(	
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "title") String searchType,
			@RequestParam(required = false) String searchWord,
			HttpServletRequest req) {
		ModelAndView mav = new ModelAndView();
		
		BoardVO board = new BoardVO();
		board.setBbsCtgryCmmncd(bbsCtgryCmmncd);
		
		log.info("@######" + board.getBbsCtgryCmmncd());
		
		MidPaginationVO<BoardVO> pagingVO = new MidPaginationVO<BoardVO>();
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			
			mav.addObject("searchType", searchType);
			mav.addObject("searchWord", searchWord);
		}
		pagingVO.setBbsCtgryCmmncd(bbsCtgryCmmncd);
		pagingVO.setStartRow(1);
		pagingVO.setEndRow(10);
		List<BoardVO> dataList = adminService.selectFreeBoardList(pagingVO);
		pagingVO.setDataList(dataList);
		
		
		log.info("@#########" + dataList);
		
		mav.addObject("pagingVO", pagingVO);
		mav.setViewName("admin/faq");
		return mav;
	}
	
	@RequestMapping(value="/signin.do")
	public String adminSignin(HttpSession session, AccountVO accountVO, 
			Model model, RedirectAttributes ra){
		
		String goPage = "";
		
		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		log.info("관리자user {} ", user);
		AccountVO account = user.getAccount();
		log.info("관리자account {} ", account);
		
		if(account != null) {
			String auth = account.getAuthCmmncd();
			if(auth.equals("AUTH101")) {
				log.info("성공");
				session.setAttribute("SessionInfo", account);
				goPage = "redirect:/myPage/admin/index";
			}else {
				model.addAttribute("message", "관리자 로그인창입니다.");
				goPage = "conn/loginForm";
			}
		}else {
			log.info("실패");
			model.addAttribute("message", "로그인 실패, 재입력");
			model.addAttribute("account", account);
			goPage = "conn/adminLoginForm";
		}
		
		return goPage;
				
	}

	
	/*
	 영상 	
	 */
	@RequestMapping(value = "/accountManagement", method = RequestMethod.GET)
	public String accountManagment(Model model) {

		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>어드민");
		

		List<AtchVO> entSttsList = adminService.entSttsList();
		
		
		if(entSttsList != null) {
			model.addAttribute("entSttsList", entSttsList);
		}
		
		
		
		return "admin/accountManagement";
	}

	
	@ResponseBody
	@RequestMapping(value = "/entApproval.do" , method = RequestMethod.POST)
	public ResponseEntity<String> entApproval(@RequestBody AccountVO av){
		
		ServiceResult result = adminService.entApproval(av);
		
		log.info(">>>>>>>>>>>>>>>>"+ av.getAccountId());
		
		String status = null;

		if (result.equals(ServiceResult.OK)) {
			status = "SUCCESS";
			return new ResponseEntity<String>(status, HttpStatus.OK);
		} else {
			status = "FAILED";
			return new ResponseEntity<String>(status, HttpStatus.FAILED_DEPENDENCY);
		}
		
	}
	
	
//	/myPage/admin/recurit.do
	@RequestMapping(value="/recurit.do")
	public String adminRecruitManage(
			Model model
			) {
		return "admin/recruitList";
	}
	
}


