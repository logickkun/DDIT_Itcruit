package kr.co.itcruit.mypage.enterprise.controller;


import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.google.gson.Gson;

import kr.co.itcruit.ServiceResult;
import kr.co.itcruit.mypage.enterprise.service.IMyEnterpriseService;
import kr.co.itcruit.vo.AccountVO;
import kr.co.itcruit.vo.ApplyProcessListVO;
import kr.co.itcruit.vo.BoardBBS201PaginationVO;
import kr.co.itcruit.vo.BoardBBS202PaginationVO;
import kr.co.itcruit.vo.BoardVO;
import kr.co.itcruit.vo.CustomPaginationInfoVO;
import kr.co.itcruit.vo.EntIntroQSTNDSNCTVO;
import kr.co.itcruit.vo.EntIntroQSTNVO;
import kr.co.itcruit.vo.RecruitVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("myPage/enterprise")
@Slf4j
public class EnterpriseController {
	
	@Autowired
	private IMyEnterpriseService myEntService;
	

	@RequestMapping(value = "/entInfo", method = RequestMethod.GET)
	public String entInfo() {
		
		
		return "entmypage/entInfo";
		
		
	}
	
	@RequestMapping(value = "/recruitRegisterForm", method = RequestMethod.GET)
	public String recruitRegisterForm(Model model) {
		
		
		model.addAttribute("tOrf1", "true");
		model.addAttribute("show1", "show");
		model.addAttribute("active1", "active");
		
		return "entmypage/recruitRegister";
		
	}
	
	
	@RequestMapping(value = "/recruitProcessQuestion", method = RequestMethod.GET)
	public String recruitProcessQuestion(
			
			@RequestParam(name="page", required = false, defaultValue ="1") int currentPage,
			@RequestParam(required = false, defaultValue = "defaultSort") String searchType,
			@RequestParam(required = false) String searchWord,
			@RequestParam(required = false) String processYn,
			@RequestParam(required = false) String recruitYn,
			
			Model model) {
		 
		log.info("#################### processYn : " + processYn);
		log.info("#################### recruitYn : " + recruitYn);
		
		int entNo = 777777;
		
		CustomPaginationInfoVO<RecruitVO> customPagingVO = new CustomPaginationInfoVO<RecruitVO>();
		
			
		customPagingVO.setSearchWord(searchWord);
		customPagingVO.setSearchType(searchType);
		customPagingVO.setProcessYn(processYn);
		customPagingVO.setRecruitYn(recruitYn);
		customPagingVO.setEntNo(entNo);
		model.addAttribute("searchWord", searchWord);
		model.addAttribute("searchType", searchType);
		model.addAttribute("processYn", processYn);
		model.addAttribute("recruitYn", recruitYn);
		
		
		// 현재 페이지
		customPagingVO.setCurrentPage(currentPage);
		
		// 1. 총 게시글 수 조회 
		int totalRecord = myEntService.selectRecruitCount(customPagingVO);
		customPagingVO.setTotalRecord(totalRecord);
		
		List<RecruitVO> searchList = myEntService.selectRecruitList(customPagingVO);
		
		customPagingVO.setDataList(searchList);
		
		
		
		model.addAttribute("customPagingVO", customPagingVO);
		
		model.addAttribute("tOrf1", "true");
		model.addAttribute("show1", "show");
		model.addAttribute("active2", "active");
	
		
		return "entmypage/recruitProcessQuestion";
		
	}
	
	@RequestMapping(value = "/recruitContectList", method = RequestMethod.GET)
	public String recruitList(Model model) {
		
		
		
		model.addAttribute("tOrf2", "true");	
		model.addAttribute("show2", "show");
		model.addAttribute("active3", "active");
		
		int entNo = 777777;
		
		List<RecruitVO> recruitList = myEntService.recruitSelectListByEntNo(entNo);
		model.addAttribute("recruitList", recruitList);
		
		
		String recruitNo = recruitList.get(0).getRecruitNo();
		String pstnCmmncdNm = recruitList.get(0).getPstnCmmncdNm();
		
		
		List<ApplyProcessListVO> selectApplyProcessList = myEntService.selectApplyProcessList(recruitNo, pstnCmmncdNm);
		model.addAttribute("selectApplyProcessList", selectApplyProcessList);
		
		
		return "entmypage/recruitContectList";
		
	}
	
	@RequestMapping(value = "/recruitStatistics", method = RequestMethod.GET)
	public String recruitStatistics(Model model) {
		
		
		
		model.addAttribute("tOrf2", "true");	
		model.addAttribute("show2", "show");
		model.addAttribute("active4", "active");
		
		return "entmypage/recruitStatistics";
		
	}
	
	@RequestMapping(value = "/talentFind", method = RequestMethod.GET)
	public String talentFind(Model model) {
		
		
		
		model.addAttribute("active5", "active");
		
		return "entmypage/talentFind";
		
	}
	
	@RequestMapping(value = "/entRating", method = RequestMethod.GET)
	public String entRating(Model model) {
		
		
		model.addAttribute("active6", "active");
		
		return "entmypage/entRating";
		
	}
	
	@RequestMapping(value = "/entAccountApplication", method = RequestMethod.GET)
	public String entAccountApplication(Model model) {
		
		
		model.addAttribute("active7", "active");
		
		return "entmypage/entAccountApplication";
		
	}
	
	@RequestMapping(value = "/entInquiryDetails", method = RequestMethod.GET)
	public String entInquiryDetails(Model model) {
		
		
		model.addAttribute("active8", "active");
		
		return "entmypage/entInquiryDetails";
		
	}
	
	@RequestMapping(value = "/entNoticeForm.do" , method = RequestMethod.GET)
	public String entNoticeForm() {
		
		return "entmypage/entNoticeForm";
		
	}
	
	
	@RequestMapping(value = "/entBoard", method = RequestMethod.GET)
	public String entBoard(Model model,
			@RequestParam(name = "bbs201ListPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(name = "bbs202ListPage", required = false, defaultValue = "1") int currentPage1
			) {
		
//		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
//		AccountVO av = user.getAccount();
		
		int entNo = 32;
		
		BoardBBS201PaginationVO<BoardVO> BBS201PagingVO = new BoardBBS201PaginationVO<BoardVO>();
		
		BBS201PagingVO.setEntNo(entNo);
		
		BBS201PagingVO.setCurrentPage(currentPage);
		
		int BBS201Count = myEntService.BBS201Count(entNo);
		
		BBS201PagingVO.setTotalRecord(BBS201Count);
		
		List<BoardVO> BBS201List = myEntService.BBS201List(BBS201PagingVO);
		
		BBS201PagingVO.setDataList(BBS201List);
		
		model.addAttribute("BBS201PagingVO", BBS201PagingVO);
		
		
		
		BoardBBS202PaginationVO<BoardVO> BBS202PagingVO = new BoardBBS202PaginationVO<BoardVO>();
		
		BBS202PagingVO.setEntNo(entNo);
		
		BBS202PagingVO.setCurrentPage(currentPage1);
		
		int BBS202Count = myEntService.BBS202Count(entNo);
		
		BBS202PagingVO.setTotalRecord(BBS202Count);
		
		List<BoardVO> BBS202List = myEntService.BBS202List(BBS202PagingVO);
		
		BBS202PagingVO.setDataList(BBS202List);
		
		model.addAttribute("BBS202PagingVO", BBS202PagingVO);
		
		model.addAttribute("active9", "active");
		return "entmypage/entBoard";
		
	}
	
	
	@RequestMapping(value = "/processDetail", method = RequestMethod.GET)
	public String processRegister(
			@RequestParam("recruitNo") String recruitNo, 
			@RequestParam("pstnCmmncdNm") String pstnCmmncdNm,
			@RequestParam("recruitTtl") String recruitTtl,
			Model model
			){
//		log.info("################## recruitNo : " + recruitNo);
//		log.info("################## pstnCmmncdNm : " + pstnCmmncdNm);
//		log.info("################## recruitTtl : " + recruitTtl);
		
		List<ApplyProcessListVO> apList= myEntService.selectProcess(recruitNo, pstnCmmncdNm);
		List<EntIntroQSTNVO> entIntroQstnNo = myEntService.getentIntroQstnNo(recruitNo, pstnCmmncdNm);
		
		Gson gson = new Gson();
		String json = gson.toJson(entIntroQstnNo);
		
		
		log.info("################## apList : " + apList);
		log.info("################## recruitTtl : " + recruitTtl);
		
		model.addAttribute("entIntroQstnNo", json);
		model.addAttribute("apList", apList);
		model.addAttribute("recruitTtl", recruitTtl);
		
		
		return "entmypage/processRegister";
	}
}
