<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>

<body  data-bs-spy="scroll" data-bs-target="#nav-scroll">
<c:if test="${likeEnt eq 'y' }">
	<script>
        $(function() {
            $('.heart').toggleClass('text-danger');
//             var toggle = true;
        });
    </script>
</c:if>
<c:if test="${likeRecruit eq 'y' }">
	<script>
        $(function() {
            $('.bi-star-fill').toggleClass('text-warning');
        });
    </script>
</c:if>
<section>
	<div class="container" data-sticky-container>

		<div class="row g-4">
			<!-- Advance Usage content START -->
			<div id="item">
				<div class="card bg-transparent">
					<!-- Article title -->
					<div class="card-header bg-transparent border-bottom py-0 px-0">
						<h3>채용 정보</h3>
					</div>
					
					<!-- Article Info -->
					<div class="card-body px-0">
						<!-- Card item START -->
						<div class="card rounded overflow-hidden shadow">
							<div class="row g-0">

								<!-- Card body -->
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">
										<!-- Title -->
										<div class="d-flex mb-2">
											<h5 class="card-title mb-0">${recruit.entNm }</h5>&nbsp;
											<button class="h6 fw-light like" id="likeEnt" style="border: solid 1px; background-color: white;">
												<i class="heart" style="font-style: normal; color: gray;">&#x2665;</i>
													관심기업
											</button>
										</div>
										<h3>${recruit.recruitTtl }</h3>
										<hr/>
										<!-- Content -->
										<!-- Info -->
										<table style="width: 100%;">
											<tr>
												<th width="20%">지원자격</th>
												<th width="30%"></th>
												<th width="20%">근무조건</th>
												<th width="30%"></th>
											</tr>
											<tr>
												<td>경력</td>
												<td>${recruit.recruitCareerCodeNm }</td>
												<td>고용형태</td>
												<td>
													<c:forEach var="hire" items="${hireSttsList }">
														${hire.hireCmmndNm }
													</c:forEach> 
												</td>
											</tr>
											<tr>
												<td>지역</td>
												<td>${recruit.cmmncdGrpCd } ${recruit.cmmncdNm1 }</td> 
												<td>급여</td>
												<td>${recruit.recruitPay }</td> 
											</tr>
<!-- 											<tr> -->
<!-- 												<td></td> -->
<!-- 												<td></td> -->
<!-- 												<td></td> -->
<!-- 												<td></td> -->
<!-- 											</tr> -->
										</table>

										
									</div>
								</div>
							</div>
						</div>
						<!-- Card item END -->

					</div>
					
				</div>
			</div>
			<!-- Advance Usage content END -->
		</div>

		<div class="col-md-12 d-flex justify-content-center">
			<button type="button" class="btn btn-primary applyBtn" style="width: 200px; height: 40px;"><i class="bi bi-check-lg"></i>즉시지원</button>
			<button type="button" id="likeRecruitBtn" class="btn" style="width: 200px; height: 40px; border: solid 1px;"><i class="bi bi-star-fill" style="color: darkgray;"></i>스크랩</button>
		</div>
		<br/>

		<div class="row g-4">
			<!-- Left side START -->
			<div class="col-md-2">
				<div data-sticky data-margin-top="80" data-sticky-for="576">
					<div id="nav-scroll" class="navbar" style="padding-top: 30px;">
						<nav class="nav nav-pills nav-pill-soft flex-column">
							<a class="nav-link" href="#item-1"><i class="bi bi-emoji-smile fa-fw me-2"></i>상세요강</a>
							<a class="nav-link" href="#item-2"><i class="bi bi-layers fa-fw me-2"></i>접수기간/방법</a>
							<a class="nav-link" href="#item-3"><i class="bi bi-info-circle fa-fw me-2"></i>지원자 정보</a>
							<a class="nav-link" href="#item-4"><i class="bi bi-house fa-fw me-2"></i>기업 정보</a>
							<a class="nav-link" href="#item-5"><i class="bi bi-house fa-fw me-2"></i>기업 게시판</a>
						</nav>
					</div>
				</div>
			</div>
			<!-- Left side END -->

			<!-- Right side START -->
			<div class="col-md-10">
				<div class="nav-scroll" data-bs-spy="scroll" data-bs-target="#nav-scroll" data-bs-smooth-scroll="true" tabindex="0">
					<!-- Get Started content START -->
					<div id="item-1">
						<div class="card bg-transparent">
							<!-- Article title -->
							<div class="card-header bg-transparent border-bottom py-0 px-0">
								<h3>상세요강</h3>
								<!-- Update and author -->
								<!-- <ul class="nav nav-divider mb-3">
									<li class="nav-item">Last updated: 7 months ago</li>
									<li class="nav-item">by Sam Lanson</li>
								</ul> -->
							</div>
							<!-- Article Info -->
							<div class="card-body px-0 pb-0">
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">
<!-- 										<label for="boContent"></label> -->
										<img src="/main/fileDisplay?recruitNo=${recruit.recruitNo }&pstnCmmncdNm=${recruit.pstnCmmncdNm}" alt="파일없음" style="width: 1000px; height: auto;">
<!-- 										<textarea id="boContent" name="boContent" class="form-control" rows="14"></textarea> -->
									</div>
								</div>
							</div>
						</div>
					</div>
					<!-- Get Started content END -->

					<!-- Divider -->
					<div class="text-center h5 my-5"></div>


					<!-- Account setup content START -->
					<div id="item-2">
						<div class="card bg-transparent">
							<!-- Article title -->
							<div class="card-header bg-transparent border-bottom py-0 px-0">
								<h3>접수기간/방법</h3>
							</div>

							<!-- Article Info -->
							<div class="card-body px-0">
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">
										<div class="row">
											<div class="col-md-5" style="text-align: center;">
												<div>
													<i class="bi bi-calendar-range" style="font-size: 2em;"></i><br/>
													<span style="font-size: 1em;">남은시간</span>
												</div>
												<span id="time"></span>
												<span id="formatDate"></span>
												<br/>
												<p id="formatTime"></p>
											</div>
											<div class="col-md-7">
												<button type="button" class="btn btn-primary applyBtn" >채용페이지로 이동</button>
												<span>홈페이지 지원 클릭수 : ${recruit.recruitHit }</span><br/>
												모집분야&nbsp;&nbsp;&nbsp;<span>${recruit.pstnCmmncdNm }</span><br/>
												모집인원&nbsp;&nbsp;&nbsp;<span>${recruit.recruitCnt }명</span><br/>
<!-- 												<input type="button" value="즉시 지원"> -->
											</div>
										</div>
									</div>
								</div>
							</div>
							
							
						</div>
					</div>
					<!-- Account setup content END -->

					<!-- Divider -->
					<div class="text-center h5 my-5"></div>

					<!-- Other Topics content START -->
					<div id="item-3">
						<div class="card bg-transparent">
							<!-- Article title -->
							<div class="card-header bg-transparent border-bottom py-0 px-0">
								<h3>지원자 정보</h3>
							</div>

							<!-- Article Info -->
							<div class="card-body px-0">
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">
										<div class="row">
											<div class="col-md-4">
												<table width="100%;">
													<span style="font-size: 18px;">학교</span><hr/>
													<tbody id="schoolTableBody"></tbody>
												</table>
											</div>


											<div class="col-md-4">
												<table width="100%;">
													<span style="font-size: 18px;">전공</span><hr/>
													<tbody id="departmentTableBody"></tbody>
												</table>
											</div>

											<div class="col-md-4" style="position: relative;">
												<span style="font-size: 18px;">성별</span><hr/>
<!-- 												<div id="ChartPageViews" style="min-height: 100px; width: 300px;"></div> -->
												<div class="mb-3 mb-xl-0 d-flex justify-content-center" id="apexChartPageViews"></div>
											</div>
											
										</div>
									</div>
								</div>
							</div>
							
						</div>
					</div>
					<!-- Other Topics content END -->

					<!-- Divider -->
					<div class="text-center h5 my-5"></div>

					<!-- Advance Usage content START -->
					<div id="item-4">
						<div class="card bg-transparent">
							<!-- Article title -->
							<div class="card-header bg-transparent border-bottom py-0 px-0">
								<h3>기업 정보</h3>
							</div>

							<!-- Article Info -->
							<div class="card-body px-0">
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">

										<!-- Card item START -->
										<div class="card rounded overflow-hidden shadow">
											<div class="row g-0">

												<!-- Image -->
												<div class="col-md-3">
													<img src="/main/logodisplay?entNo=${recruit.entNo }" alt="logo" style="max-height: 150px; width: 100%;">
												</div>
												
												<!-- Card body -->
												<div class="col-md-9">
													<div class="card-body">
														<!-- Title -->
														<div class="d-flex mb-2" style="display: flex; align-items: baseline;">
															<h5 class="card-title mb-0"><a href="#">ITcruit</a></h5>
															&nbsp;
															<button onclick="window.location.href='/ent/detail.do?entNo=${recruit.entNo }'" class="h6 fw-light" style="height: 30px; border: solid 1px; background-color: white;"><span>기업정보</span></button>
															&nbsp;
															<!-- Wishlist icon -->
															<button class="h6 fw-light like" id="likeBtn" style="height: 30px; border: solid 1px; background-color: white;"><i class="heart" style="font-style: normal; color: gray;">&#x2665;</i>${enterprise.entHit } 관심기업</button>
														</div>
														<!-- Content -->
														<!-- Info -->
														<table width="100%">
															<tr>
																<td>산업</td>
																<td>${enterprise.ksicNm }</td>
																<td>사원수</td>
																<td>${enterprise.empCnt } 명</td>
															</tr>
															<tr>
																<td>설립</td>
																<td id="fndnYr"></td>
																<td>기업형태</td>
																<td>${enterprise.bizTypeNm }</td>
															</tr>
															<tr>
																<td>매출액</td>
																<td><fmt:formatNumber pattern="#,###" value="${enterprise.entEbit }"/> 원</td>
															</tr>
														</table>

													</div>
												</div>
											</div>
										</div>
										<!-- Card item END -->

									</div>
								</div>
							</div>
							
						</div>
					</div>
					<!-- Advance Usage content END -->

					<!-- Divider -->
					<div class="text-center h5 my-5"></div>

					<div id="item-5">
						<div class="card bg-transparent">
							<!-- Article title -->
							<div class="card-header bg-transparent border-bottom py-0 px-0" style="display: flex; justify-content: space-between; align-items: flex-end;">
								<h3>기업 게시판</h3><a href="/board/ent/list.do?entNo=${recruit.entNo }"><span>게시판 더보기<i class="bi bi-chevron-right"></i></span></a>
							</div>
							<!-- Article Info -->
							<div class="card-body px-0">
								<div class="col-md-12" style="border: 1px solid #6F5CF3;">
									<div class="card-body">
										<table width="100%">
											<tr>
												<td><a href=""><h4>[공지]${boardNotice.bbsTtl }</h4></a></td>
											</tr>
											<tr>
												<td><h5>${boardNotice.bbsCn }</h5></td>
											</tr>
											<tr>
												<td>
													<i style="font-style: normal;" class="bi bi-eye">${boardNotice.bbsInqCnt }</i>조회수&nbsp;&nbsp;
													<i style="font-style: normal;" class="bi bi-chat-left">${boardNotice.noticeEntCommentHit }</i>댓글수&nbsp;&nbsp;
													<i style="font-style: normal;" id="noticeReg"></i>
												</td>
											</tr>
										</table>
										<br/><hr/>
										<table width="100%">
											<tr>
												<td><a href=""><h4><i class="bi bi-question-lg" style="color: #6F5CF3;"></i>${boardFree.bbsTtl }</h4></a></td>
											</tr>
											<tr>
												<td><h5>${boardFree.bbsCn }</h5></td>
											</tr>
											<tr>
												<td>
													<i style="font-style: normal;" class="bi bi-eye">${boardFree.bbsInqCnt }</i>조회수&nbsp;&nbsp;
													<i style="font-style: normal;" class="bi bi-chat-left">${boardFree.freeEntCommentHit }</i>댓글수&nbsp;&nbsp;
													<i style="font-style: normal;" id="freeReg"></i>
												</td>
											</tr>
										</table>
									</div>
								</div>
							</div>
							
							
						</div>
					</div>

				<!-- Divider -->
				<div class="text-center h5 my-5"></div>

				</div>
			</div>
			<!-- Right side END -->
		</div>
		
		
		<!-- 이력서 모달 -->
        <div class="modal fade twm-saved-jobs-view" id="resumeView" aria-hidden="true" aria-labelledby="saved_job_view" tabindex="-1">
	
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <form>
    
                        <div class="modal-header">
                            <h2 class="modal-title" id="saved_job_view">ITcruit</h2>
                            <div>이력서를 선택해주세요.</div>
<!--                             <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> -->
                        </div>
    
                        <div class="modal-body" id="resumeModalBody">
                            
                        </div>
    
                        <div class="modal-footer">
                            <button type="button" class="site-button" data-bs-dismiss="modal">확인</button>
                        </div>
    
                    </form>
                </div>
            </div>
            
        </div>
	</div>
</section>
</body>

<script src="${pageContext.request.contextPath }/resources/assets/vendor/apexcharts/js/apexcharts.min.js"></script>
<script src="${pageContext.request.contextPath }/resources/assets/vendor/sticky-js/sticky.min.js"></script>
<script type="text/javascript">
$(function(){
	// 관심기업 버튼클릭 이벤트
    var accountId = "${recruit.accountId }";
    var entNo = ${recruit.entNo };
    var recruitNo = "${recruit.recruitNo }";
    var pstnCmmncdNm = "${recruit.pstnCmmncdNm}";

    var obj = {
    	accountId : accountId,
    	entNo : entNo
    }
    
    $('.like').click(function(){
        
    	if(accountId == null || accountId == ""){
        	alert("로그인 후 이용");
        	return;
        }
        
    	var num = parseInt($(this).text());
    	
    	if($('.heart').hasClass('text-danger')){
    		
    		$.ajax({
            	type : "post",
            	url : "/like/hateEnt.do",
            	contentType : "application/json; charset=utf-8",
            	data : JSON.stringify(obj),
            	beforeSend: function(xhr) {
                    xhr.setRequestHeader(header, token);
                },
                success : function(result){
                	console.log(result);
                	if(result.likeEntYN == "Y"){
                		$('.heart').removeClass('text-danger');
                		$("#likeBtn").html('<i class="heart" style="font-style: normal; color: gray;">&#x2665;</i>' + result.entHit + " 관심기업");
                		console.log("result.entHit");
	                	alert("관심기업 등록취소");
// 	                	updateHit(result.entHit);
                	}else{
                		alert("관심기업 등록취소 실패");
                	}
                }
                
            });
    		
    	}else{
    		
    		$.ajax({
            	type : "post",
            	url : "/like/loveEnt.do",
            	contentType : "application/json; charset=utf-8",
            	data : JSON.stringify(obj),
            	beforeSend: function(xhr) {
                    xhr.setRequestHeader(header, token);
                },
                success : function(result){
                	console.log(result);
                	if(result.likeEntYN == "Y"){
                		$('.heart').addClass('text-danger');
                		$("#likeBtn").html('<i class="heart text-danger" style="font-style: normal; color: gray;">&#x2665;</i>' + result.entHit + " 관심기업");
                		console.log("result.entHit");
                		alert("관심기업 등록성공");
//                 		updateHit(result.entHit);
                	}else{
                		alert("관심기업 등록실패");
                	}
                }
                
            });
    	}
    });

    
    var applyBtn = $(".applyBtn");
    // 지원버튼 이벤트
    applyBtn.on("click", function(){
    	
    	
        console.log(accountId);
        console.log(recruitNo);
        
        if(accountId == null || accountId == ""){
        	Swal.fire({
       		    title: '로그인 후 이용해주세요.'
       		}).then((result) => {
       		  if (result.isConfirmed) {
       		    // 확인 버튼을 클릭한 경우
       		    location.href = "/main/loginForm.do";
       		  }
       		}).catch((error) => {
       	        // 에러 처리 (선택 사항)
       	        console.error(error);
       	    });
       	    return;
        }
        
        
     	// 공고 종료 여부 확인
        var endTime = new Date("${recruit.recruitEndDt}");
        var currentTime = new Date();
        var timeDiff = endTime - currentTime;
        
        if (timeDiff <= 0) {
            // 공고가 이미 마감된 경우
            Swal.fire('채용공고 마감시간이 지났습니다.');
            return; // 함수 종료
        }
        
        
        
        
        var obj = {
        	accountId : accountId,
        	recruitNo : recruitNo,
        	pstnCmmncdNm : pstnCmmncdNm
        }
    	
        $.ajax({
        	type : "post",
        	url : "/like/apply.do",
        	contentType : "application/json; charset=utf-8",
        	data : JSON.stringify(obj),
        	beforeSend: function(xhr) {
                xhr.setRequestHeader(header, token);
            },
            success : function(result){
            	console.log(result);
            	console.log(result.resumeList);
            	console.log(result.recruit);
            	
            	
            	var resumeList = result.resumeList;
            	var recruit = result.recruit;
            	
            	var processYn = recruit.processYn;
            	var entUrl = recruit.entUrl;
            	var resumeCheck = recruit.resumeCheck;
            	var applicantCheck = recruit.applicantCheck;
//             	console.log(processYn);
//             	console.log(entUrl);
//             	console.log(resumeCheck);
//             	console.log(applicantCheck);


// 				// 지원내역  확인
				if(applicantCheck == 'Y'){
					Swal.fire(
			      			  '지원내역이 있습니다.'
			      			)
					return;
				}else{
					// 이력서 확인
					if(resumeCheck == 'N'){
						Swal.fire({
							  title: '이력서 미작성 회원입니다. 이동하시겠습니까?',
							  icon: 'warning',
							  showCancelButton: true,
							  confirmButtonText: '확인',
							  cancelButtonText: '취소'
							}).then((result) => {
							  if (result.isConfirmed) {
							    // 확인 버튼을 클릭한 경우
							    location.href = "/resume/registerView";	
							  } else {
							    // 취소 버튼을 클릭한 경우
							    return;
							  }
							});
					}else{
						
						
						var modalBody = $('#resumeView .modal-body');
						modalBody.empty(); // 모달 내용 초기화
						
// 				        var rsmNo = resume.rsmNo;
// 				        var accountId = resume.accountId;
// 				        var rsmGender = resume.rsmGender;
// 				        var rsmTtl = resume.rsmTtl;
// 				        var rsmCareerYear = resume.rsmCareerYear;
// 				        var rsmRlsYn = resume.rsmRlsYn;
// 				        var rsmPhoto = resume.rsmPhoto;
// 				        var rsmIntroduction = resume.rsmIntroduction;
// 				        var eduEnd = resume.eduEnd;
// 				        var eduNm = resume.eduNm;
// 				        var grade = resume.grade;
// 				        var full = resume.full;
// 				        var rsmMjrNm = resume.rsmMjrNm;
// 				        var rsmMjrCd = resume.rsmMjrCd;
// 				        var rsmNewCareer = resume.rsmNewCareer;
// 				        var eduAcdmcr = resume.eduAcdmcr;

		                // 테이블 생성
						var table = $('<table class="table"><thead><tr><th></th><th>번호</th><th>이름</th></tr></thead><tbody></tbody></table>');
						modalBody.append(table);
						var tbody = table.find('tbody');
						
						$.each(resumeList, function(index, resume) {
						    var row = $('<tr>' +
						                    '<td><input class="form-check-input resume-checkbox" type="checkbox" value="' + resume.rsmNo + '" id="resumeCheckbox' + index + '"></td>' +
						                    '<td>' + (index + 1) + '번</td>' +
						                    '<td>' + resume.rsmTtl + '</td>' +
						                '</tr>');
						    tbody.append(row);
						
						    // 체크박스 클릭 이벤트 처리
						    row.find('.resume-checkbox').on('change', function() {
						        if ($(this).is(':checked')) {
						            // 다른 체크박스들의 체크를 해제
						            $('.resume-checkbox').not(this).prop('checked', false);
						
						            // 선택된 이력서의 소개를 보여주는 div 생성
						            var introductionDiv = $('<div class="resume-introduction">' +
						                                        '<h4>' + resume.rsmTtl + '</h4>' +
						                                        '<p>' + resume.rsmIntroduction + '</p>' +
						                                    '</div>');
						         	// 기존에 선택된 이력서 내용이 있다면 삭제
						            $('.resume-introduction').remove();
						            modalBody.append(introductionDiv);
						        } else {
						            // 선택 해제된 경우 해당 이력서의 소개를 보여주는 div 제거
						            $('.resume-introduction').remove();
						        }
						    });
						});
		                
		                // 이력서 선택 모달 열기
		                $('#resumeView').modal('show');
		                
		                
		             	// 모달이 닫힐 때 한 번만 실행되는 이벤트 핸들러
		                $('.site-button').on('click', function () {
		                    // 선택한 이력서 정보를 담을 배열
		                    var selectedResumes = [];
		                    // 선택된 체크박스의 값을 배열에 추가
		                    $('.resume-checkbox:checked').each(function () {
		                        selectedResumes.push($(this).val());
		                    });
		                    
							var rsmNo = selectedResumes[0];
							console.log(rsmNo);
		                    
							// 이력서번호 포함해서 다시 보내기
							var obj = {
									rsmNo: rsmNo,
							        accountId: accountId,
							        recruitNo: recruitNo,
							        pstnCmmncdNm: pstnCmmncdNm
							    };
							
							
							
							 $.ajax({
						        	type : "post",
						        	url : "/like/applyInsert.do",
						        	contentType : "application/json; charset=utf-8",
						        	data : JSON.stringify(obj),
						        	beforeSend: function(xhr) {
						                xhr.setRequestHeader(header, token);
						            },
						            success : function(result){
						            	console.log(result);
						            	
						            	// 프로세스 확인
										if(processYn == "Y"){
						            		location.href = "/main/introForm.do?recruitNo=" + recruitNo + "&pstnCmmncdNm=" + pstnCmmncdNm;
						            	}else{
						            		if (!entUrl.startsWith("http://") && !entUrl.startsWith("https://")) {
						            	        // 상대 URL인 경우, 절대 URL로 변환
						            	        entUrl = "http://" + entUrl;
						            	    }
						            	    window.open(entUrl, "_blank");
						            	}
						            }
						            
							 });
							 
							
		                });
		                
						
					}

				}
            }          
        });
        
    });
    
    // 관심공고
    var likeRecruitBtn = $("#likeRecruitBtn");
    
    likeRecruitBtn.on("click", function(){

    	if(accountId == null || accountId == ""){
        	alert("로그인 후 이용");
        	return;
        }		
    	
        var obj = {
          	accountId : accountId,
        	recruitNo : recruitNo,
        	pstnCmmncdNm : pstnCmmncdNm
        }
        
       	if($('.bi-star-fill').hasClass('text-warning')){
       		
       		$.ajax({
               	type : "post",
               	url : "/like/hateRecruit.do",
               	contentType : "application/json; charset=utf-8",
               	data : JSON.stringify(obj),
               	beforeSend: function(xhr) {
                       xhr.setRequestHeader(header, token);
                   },
                   success : function(result){
                   	console.log("!!!!" + result);
                   	if(result == "Y"){
                   		$('.bi-star-fill').removeClass('text-warning');
   	                	alert("관심공고 등록취소");
                   	}else{
                   		alert("관심공고 등록취소 실패");
                   	}
                   }
                   
               });
       		
       	}else{
       		
       		$.ajax({
               	type : "post",
               	url : "/like/loveRecruit.do",
               	contentType : "application/json; charset=utf-8",
               	data : JSON.stringify(obj),
               	beforeSend: function(xhr) {
                       xhr.setRequestHeader(header, token);
                   },
                   success : function(result){
                   	console.log("!!!!" + result);
                   	if(result == "Y"){
                   		$('.bi-star-fill').addClass('text-warning');
                   		alert("관심공고 등록성공");
                   	}else{
                   		alert("관심공고 등록실패");
                   	}
                }
               
            });
       	}
    	
    });
 
    
    
    
});



// 남은시간표시
function timer(){
	var endTime = new Date("${recruit.recruitEndDt }");
    var currentTime = new Date();
    
    var time = endTime - currentTime;
    var timeHTML = "";
 	// 공고 종료 시간이 지났을 경우
    if (time <= 0) {
    	timeHTML = "<span style='color: red; font-size: 1.3em;'>공고마감</span><br/>";
    	document.getElementById("time").innerHTML = timeHTML;
    	
//     	var applyBtn = $(".applyBtn");
//     	applyBtn.off("click"); // 클릭 이벤트 제거
//     	applyBtn.prop("disabled", true); // 버튼 비활성화
        
        return; // 시간을 업데이트하지 않고 함수를 종료
    }
    
    // 타입에 맞게 저장
    var days = Math.floor(time / (1000 * 60 * 60 * 24));
    var hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((time % (1000 * 60)) / 1000);
    
    // 9을 09로 출력
    var daysStr = days < 10 ? "0" + days : days;
    var hoursStr = hours < 10 ? "0" + hours : hours;
    var minutesStr = minutes < 10 ? "0" + minutes : minutes;
    var secondsStr = seconds < 10 ? "0" + seconds : seconds;
    
	timeHTML += "<span style='color: red; font-size: 1.3em;'>" + daysStr + "일</span>&nbsp;";
	timeHTML += "<span style='color: red; font-size: 1.3em;'>" + hoursStr + ":" + minutesStr + ":" + secondsStr + "(시간)</span><br/>";

	document.getElementById("time").innerHTML = timeHTML;
}

timer();
	
setInterval(timer, 1000);

// 시작일,마감일 변경
function formatDate(dateString) {
    var date = new Date(dateString);
    var year = date.getFullYear();
    var month = date.getMonth() + 1; 
    var day = date.getDate();

    month = month < 10 ? "0" + month : month;
    day = day < 10 ? "0" + day : day;

    // 요일 구하기
    var days = ['일', '월', '화', '수', '목', '금', '토'];
    var dayOfWeek = days[date.getDay()];

    return year + "." + month + "." + day + "(" + dayOfWeek + ")";
}
var startDate = "${recruit.recruitStrtDt}";
var formatStartDate = formatDate(startDate).trim();
var endDate = "${recruit.recruitEndDt}";
var formatEndDate = formatDate(endDate).trim();
var dateHTML = "시작일 <span style='font-weight: bold;'>" + formatStartDate + "</span><br/>";
dateHTML += "마감일 <span style='font-weight: bold;'>" + formatEndDate + "</span><br/>";
document.getElementById("formatDate").innerHTML = dateHTML;

// 마감시간 변경
var endHours = "${recruit.recruitEndDt}";
var indexT = endHours.indexOf('T'); 
var endTime = endHours.substring(indexT + 1); 
var formatEndTime = endTime.replace(':', '시 ') + '분 마감';
var timeHTML = "<p>" + formatEndTime + "</p>";
document.getElementById("formatTime").innerHTML = timeHTML;

document.addEventListener("DOMContentLoaded", function() {
	
    // 기존 도넛 차트를 제거합니다.
    var existingChartElement = document.querySelector("#apexChartPageViews");
    if (existingChartElement) {
        existingChartElement.innerHTML = "";
    }
    
	// 성별 목록을 쉼표(,)로 분리하여 배열로 변환
	genderList = '${genderList }'.split(', ');
	console.log(genderList);

	//성별별 빈도수 계산
	var maleCount = 0;
	var femaleCount = 0;
	genderList.forEach(function(gender) {
	    // 대괄호 제거하고 trim
	    gender = gender.trim().replace("[", "").replace("]", "");
	    if (gender === 'M') {
	        maleCount++;
	    } else if (gender === 'F') {
	        femaleCount++;
	    }
	});

    // 도넛 차트를 렌더링합니다.
    var ThemeColor = {
        getCssVariableValue: function (variableName) {
            var style = getComputedStyle(document.documentElement);
            return style.getPropertyValue(variableName).trim();
        }
    };

    var ff = document.querySelector("#apexChartPageViews");
    if (typeof(ff) != 'undefined' && ff != null) {
        var options = {
            series: [maleCount, femaleCount], // 여기에 남녀수를 넣으면 될거같음
            labels: ['Male', 'Female'],
            chart: {
                height: 150,
                width: 150,
                type: 'pie',
                sparkline: {
                    enabled: true
                }
            },
            stroke: {
                colors: 'transparent',
            },
            colors: [
                ThemeColor.getCssVariableValue('--bs-success'),
                ThemeColor.getCssVariableValue('--bs-danger'),
            ],
            tooltip: {
                theme: "dark"
            },
            dataLabels: {
                enabled: true,
                style: {
                    fontSize: '16px' // 데이터 라벨의 폰트 크기를 조절합니다.
//                     ,color: 'black'
                },
                formatter: function (val) {
                    return val.toFixed(0) + "%"; // 데이터 값을 퍼센트로 표시합니다.
                }
//                 ,
//                 offsetX: 0, // 가로 방향으로의 이동 거리 (음수 값은 왼쪽, 양수 값은 오른쪽)
//                 offsetY: -10 // 세로 방향으로의 이동 거리 (음수 값은 위쪽, 양수 값은 아래쪽)
            },
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        height: 100,
                        width: 100
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }]
        };
        var chart = new ApexCharts(document.querySelector("#apexChartPageViews"), options);
        chart.render();
        
     
    }
});


function dateFormat(dateStr) {
    // 날짜 문자열을 공백을 기준으로 분리하여 배열로 만듭니다.
    var parts = dateStr.split(" ");

    // 월의 약어를 숫자로 변환합니다.
    var monthMap = {
        "Jan": "01",
        "Feb": "02",
        "Mar": "03",
        "Apr": "04",
        "May": "05",
        "Jun": "06",
        "Jul": "07",
        "Aug": "08",
        "Sep": "09",
        "Oct": "10",
        "Nov": "11",
        "Dec": "12"
    };
    var month = monthMap[parts[1]];

    // 날짜와 시간을 추출합니다.
    var day = parts[2];
    var time = parts[3];
    var year = parts[5];

    // 최종적으로 ISO 8601 형식으로 날짜 문자열을 생성합니다.
    var date = year + "." + month + "." + day;

    return date;
}

var noticeDate = "${boardNotice.bbsRegDt }"; 
var freeDate = "${boardFree.bbsRegDt }"; 
var formatNotice = dateFormat(noticeDate);
var formatFree = dateFormat(freeDate);
var noticeBoard = document.getElementById("noticeReg");
var FreeBoard = document.getElementById("freeReg");
noticeBoard.innerHTML = "등록일(" + formatNotice + ")";
FreeBoard.innerHTML = "등록일(" + formatFree + ")";





var dateString = "${enterprise.fndnYr}";
var year = dateString.substr(0, 4);

var dateObject = new Date(year); // month는 0부터 시작하므로 1을 빼줍니다.

// 현재 날짜를 가져옵니다.
var currentDate = new Date();

// 연도 차이를 계산합니다.
var yearDifference = currentDate.getFullYear() - dateObject.getFullYear();

// 변환된 문자열을 생성합니다.
var formattedDate = year + "년(" + yearDifference + "년차)";

// console.log(formattedDate);
document.getElementById("fndnYr").innerText = formattedDate;


// 학교 목록을 쉼표(,)로 분리하여 배열로 변환
schoolList = '${schoolList}'.split(', ');
console.log(schoolList);

//중복을 고려한 학교의 빈도수 계산
var schoolCounts = {};
schoolList.forEach(function(school) {
    // 대괄호 제거
    school = school.trim().replace("[", "").replace("]", "");
    if (schoolCounts.hasOwnProperty(school)) {
        schoolCounts[school]++;
    } else {
        schoolCounts[school] = 1;
    }
});

// 총 학교 수 계산
var totalSchools = Object.keys(schoolCounts).length;

// 빈도수를 내림차순으로 정렬하되, 빈도수가 같으면 학교 이름을 가나다 순으로 오름차순 정렬
var sortedSchools = Object.keys(schoolCounts).sort(function(a, b) {
    // 빈도수가 같으면 학교 이름을 가나다 순으로 정렬
    if (schoolCounts[a] === schoolCounts[b]) {
        return a.localeCompare(b);
    }
    // 빈도수가 다르면 내림차순으로 정렬
    return schoolCounts[b] - schoolCounts[a];
});

// 결과를 표시할 테이블의 <tbody> 요소 선택
var schoolTableBody = document.getElementById("schoolTableBody");

// 상위 5개 학교만 표시
sortedSchools.slice(0, 5).forEach(function(school, index) {
    var rank = index + 1;
    var count = schoolCounts[school];
    var percentage = (count / totalSchools) * 100;

    // 새로운 <tr> 요소 생성
    var newRow = document.createElement("tr");

    // 새로운 <tr> 요소에 데이터 추가
    newRow.innerHTML = "<td width='15%'>" + rank + "위</td><td width='65%'>" + school + "</td><td width='20%'>" + percentage.toFixed(1) + "%</td>";

    // 테이블의 <tbody> 요소에 새로운 <tr> 요소 추가
    schoolTableBody.appendChild(newRow);
});




//학과 목록을 쉼표(,)로 분리하여 배열로 변환
departmentList = '${departmentList}'.split(', ');
console.log(departmentList);

//학과별 빈도수 계산
var departmentCounts = {};
departmentList.forEach(function(department) {
    // 대괄호 제거
    department = department.trim().replace("[", "").replace("]", "");
    if (departmentCounts.hasOwnProperty(department)) {
        departmentCounts[department]++;
    } else {
        departmentCounts[department] = 1;
    }
});

// 총 학과 수 계산
var totalDepartments = Object.keys(departmentCounts).length;

// 빈도수를 내림차순으로 정렬하되, 빈도수가 같으면 학과 이름을 가나다 순으로 오름차순 정렬
var sortedDepartments = Object.keys(departmentCounts).sort(function(a, b) {
    // 빈도수가 같으면 학과 이름을 가나다 순으로 정렬
    if (departmentCounts[a] === departmentCounts[b]) {
        return a.localeCompare(b);
    }
    // 빈도수가 다르면 내림차순으로 정렬
    return departmentCounts[b] - departmentCounts[a];
});

// 결과를 표시할 테이블의 <tbody> 요소 선택
var departmentTableBody = document.getElementById("departmentTableBody");

// 상위 5개 학과만 표시
sortedDepartments.slice(0, 5).forEach(function(department, index) {
    var rank = index + 1;
    var count = departmentCounts[department];
    var percentage = (count / totalDepartments) * 100;

    // 새로운 <tr> 요소 생성
    var newRow = document.createElement("tr");

    // 새로운 <tr> 요소에 데이터 추가
    newRow.innerHTML = "<td width='15%'>" + rank + "위</td><td width='65%'>" + department + "</td><td width='20%'>" + percentage.toFixed(1) + "%</td>";

    // 테이블의 <tbody> 요소에 새로운 <tr> 요소 추가
    departmentTableBody.appendChild(newRow);
});



</script>
