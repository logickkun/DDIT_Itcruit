package kr.co.itcruit.mypage.enterprise.service.impl;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import kr.co.itcruit.ServiceResult;
import kr.co.itcruit.mapper.IAtchFileMapper;
import kr.co.itcruit.mapper.IEnterpriseMapper;
import kr.co.itcruit.mapper.IMyEnterpriseMapper;
import kr.co.itcruit.mypage.enterprise.service.IMyEnterpriseService;
import kr.co.itcruit.vo.AtchFileVO;
import kr.co.itcruit.vo.EnterpriseVO;
import kr.co.itcruit.vo.RecruitVO;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class EnterpriseServiceImpl implements IMyEnterpriseService{

	@Autowired
	private IMyEnterpriseMapper myEntMapper;
	
	@Autowired
	private IEnterpriseMapper entMapper;
	
	@Autowired
	private IAtchFileMapper fileMapper;

	@Override
	@Transactional
	public ServiceResult recruitRegisterinsert(RecruitVO recruitVO, HttpServletRequest req) {

	    // 기업 로그인 세션에서 기업번호 가져오기.
	    int entNo = 1;
	    
	    String recruitNo = getRecruitNo(entNo);
	    recruitVO.setRecruitNo(recruitNo);
	    recruitVO.setEntNo(entNo);
	    
	    log.info("#################hireInfoVO" + recruitVO);
	    
	    ServiceResult result = null;
	    
	    try {
	    	
	    	int passFour = atchFileInsert(recruitVO, req);
	        int pass = myEntMapper.recruitRegisterinsert(recruitVO);
	        int passOne = preferlang(recruitVO);
	        int passTwo = esntlLang(recruitVO);
	        int passThree = hireStts(recruitVO);
	        
	        if (pass == 1 && passOne == 1 && passTwo == 1 && passThree == 1) {
	            result = ServiceResult.OK;
	        } else {
	            result = ServiceResult.FAILED;
	        }
	    } catch (Exception e) {
	        log.error(e.getMessage());
	        result = ServiceResult.FAILED;
	    }
	    
	    return result;
	}


	
	
	private int atchFileInsert(RecruitVO recruitVO, HttpServletRequest req) {
		
		int pass = 0;
		
		// 기업 로그인 세션에서 기업번호 가져오기.
	    int entNo = 1;
	    
	    String fileSrcNo = getRecruitNo(entNo);
	    String orgnCmmncd = "채용공고";
	    
		for(MultipartFile recruitFile : recruitVO.getRecruitFile()) {
			
			AtchFileVO afv = new AtchFileVO(recruitFile, req, fileSrcNo, orgnCmmncd);
			
			fileMapper.atchFileInsert(afv);
			
		}
		
		pass = 1;
		
		
		return pass;
	}


	public int hireStts(RecruitVO recruitVO) {
		
		int pass = 0;
		
		for (String  hireCmmncdNm : recruitVO.getHireCmmncdNms()) {
			recruitVO.setHireCmmncdNm(hireCmmncdNm);
			int cnt = myEntMapper.hireSttsInsert(recruitVO);
			
			if(cnt > 0) {
				
				pass = 1;
				
			}
					
		}
		
		return pass;
	}

	public int esntlLang(RecruitVO recruitVO) {
		
		int pass = 0;
		
		for (String  esntlLangCmmncdNm : recruitVO.getEsntlLangCmmncdNms()) {
			recruitVO.setEsntlLangCmmncdNm(esntlLangCmmncdNm);
			int cnt = myEntMapper.esntlLangInsert(recruitVO);
			
			if(cnt > 0) {
							
				pass = 1;
			}
		}
		
		return pass;
	}
	
	public int preferlang(RecruitVO recruitVO) {
		
		int pass = 0;
		
		for (String  preferLangCmmncdNm : recruitVO.getPreferLangCmmncdNms()) {
			
			recruitVO.setPreferLangCmmncdNm(preferLangCmmncdNm);
			int cnt = myEntMapper.preferLangInsert(recruitVO);
			
			if(cnt > 0) {
				
				pass = 1;
			}
			
		}
		
		return pass;
		
	}

	private String getRecruitNo(int entNo) {
		
		EnterpriseVO entVO = entMapper.selectEnt(entNo);
		String entName = entVO.getEntNm().substring(0, 3);
		Date now = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd");
        String currentDate = sdf.format(now);
		int rnd = (int)(Math.random() * 9000) + 1000;
		StringBuilder sb = new StringBuilder();
		sb.append(entName);
		sb.append("_");
		sb.append(currentDate);
		sb.append("_");
		sb.append(rnd);
		
		return sb.toString();
	}

}